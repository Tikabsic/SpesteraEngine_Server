// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ZSProtocol.proto

#include "ZSProtocol.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr ZSWrapper::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::ZSWrapper_MessageType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ZSWrapper::ZSWrapper(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZSWrapperDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZSWrapperDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZSWrapperDefaultTypeInternal() {}
  union {
    ZSWrapper _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZSWrapperDefaultTypeInternal _ZSWrapper_default_instance_;

inline constexpr RequestWorldData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestWorldData::RequestWorldData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestWorldDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestWorldDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestWorldDataDefaultTypeInternal() {}
  union {
    RequestWorldData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestWorldDataDefaultTypeInternal _RequestWorldData_default_instance_;

inline constexpr PlayerPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{0u},
        position_x_{0},
        position_y_{0},
        position_z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerPosition::PlayerPosition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerPositionDefaultTypeInternal() {}
  union {
    PlayerPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerPositionDefaultTypeInternal _PlayerPosition_default_instance_;

inline constexpr PlayerOut::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerOut::PlayerOut(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerOutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerOutDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerOutDefaultTypeInternal() {}
  union {
    PlayerOut _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerOutDefaultTypeInternal _PlayerOut_default_instance_;

inline constexpr PlayerInitialData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_id_{0u},
        position_x_{0},
        position_y_{0},
        position_z_{0},
        player_movementspeed_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerInitialData::PlayerInitialData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerInitialDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerInitialDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerInitialDataDefaultTypeInternal() {}
  union {
    PlayerInitialData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerInitialDataDefaultTypeInternal _PlayerInitialData_default_instance_;

inline constexpr MonsterPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : monster_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        monster_id_{0},
        position_x_{0},
        position_y_{0},
        position_z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MonsterPosition::MonsterPosition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MonsterPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterPositionDefaultTypeInternal() {}
  union {
    MonsterPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterPositionDefaultTypeInternal _MonsterPosition_default_instance_;

inline constexpr MonsterInitialData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : monster_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        monster_id_{0},
        position_x_{0},
        position_y_{0},
        position_z_{0},
        monster_movement_speed_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MonsterInitialData::MonsterInitialData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MonsterInitialDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterInitialDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterInitialDataDefaultTypeInternal() {}
  union {
    MonsterInitialData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterInitialDataDefaultTypeInternal _MonsterInitialData_default_instance_;

inline constexpr AssignCharacter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : secret_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AssignCharacter::AssignCharacter(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AssignCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssignCharacterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssignCharacterDefaultTypeInternal() {}
  union {
    AssignCharacter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssignCharacterDefaultTypeInternal _AssignCharacter_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR AnimationClip::AnimationClip(::_pbi::ConstantInitialized) {}
struct AnimationClipDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnimationClipDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnimationClipDefaultTypeInternal() {}
  union {
    AnimationClip _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnimationClipDefaultTypeInternal _AnimationClip_default_instance_;

inline constexpr WorldData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : players_{},
        monsters_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorldData::WorldData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WorldDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorldDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorldDataDefaultTypeInternal() {}
  union {
    WorldData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorldDataDefaultTypeInternal _WorldData_default_instance_;

inline constexpr PlayerIn::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerIn::PlayerIn(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerInDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerInDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerInDefaultTypeInternal() {}
  union {
    PlayerIn _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerInDefaultTypeInternal _PlayerIn_default_instance_;

inline constexpr Heartbeat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : players_{},
        monsters_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Heartbeat::Heartbeat(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HeartbeatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatDefaultTypeInternal() {}
  union {
    Heartbeat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatDefaultTypeInternal _Heartbeat_default_instance_;
static ::_pb::Metadata file_level_metadata_ZSProtocol_2eproto[12];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ZSProtocol_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ZSProtocol_2eproto = nullptr;
const ::uint32_t TableStruct_ZSProtocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ZSWrapper, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ZSWrapper, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::ZSWrapper, _impl_.payload_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Heartbeat, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Heartbeat, _impl_.players_),
    PROTOBUF_FIELD_OFFSET(::Heartbeat, _impl_.monsters_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::RequestWorldData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::RequestWorldData, _impl_.player_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::WorldData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::WorldData, _impl_.players_),
    PROTOBUF_FIELD_OFFSET(::WorldData, _impl_.monsters_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::AssignCharacter, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::AssignCharacter, _impl_.secret_key_),
    PROTOBUF_FIELD_OFFSET(::PlayerIn, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::PlayerIn, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PlayerIn, _impl_.data_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PlayerOut, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PlayerOut, _impl_.player_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.player_name_),
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.position_x_),
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.position_y_),
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.position_z_),
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.player_movementspeed_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PlayerPosition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PlayerPosition, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::PlayerPosition, _impl_.position_x_),
    PROTOBUF_FIELD_OFFSET(::PlayerPosition, _impl_.position_y_),
    PROTOBUF_FIELD_OFFSET(::PlayerPosition, _impl_.position_z_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MonsterInitialData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MonsterInitialData, _impl_.monster_id_),
    PROTOBUF_FIELD_OFFSET(::MonsterInitialData, _impl_.monster_name_),
    PROTOBUF_FIELD_OFFSET(::MonsterInitialData, _impl_.position_x_),
    PROTOBUF_FIELD_OFFSET(::MonsterInitialData, _impl_.position_y_),
    PROTOBUF_FIELD_OFFSET(::MonsterInitialData, _impl_.position_z_),
    PROTOBUF_FIELD_OFFSET(::MonsterInitialData, _impl_.monster_movement_speed_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _impl_.monster_id_),
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _impl_.monster_name_),
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _impl_.position_x_),
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _impl_.position_y_),
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _impl_.position_z_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::AnimationClip, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ZSWrapper)},
        {10, -1, -1, sizeof(::Heartbeat)},
        {20, -1, -1, sizeof(::RequestWorldData)},
        {29, -1, -1, sizeof(::WorldData)},
        {39, -1, -1, sizeof(::AssignCharacter)},
        {48, 57, -1, sizeof(::PlayerIn)},
        {58, -1, -1, sizeof(::PlayerOut)},
        {67, -1, -1, sizeof(::PlayerInitialData)},
        {81, -1, -1, sizeof(::PlayerPosition)},
        {93, -1, -1, sizeof(::MonsterInitialData)},
        {107, -1, -1, sizeof(::MonsterPosition)},
        {120, -1, -1, sizeof(::AnimationClip)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_ZSWrapper_default_instance_._instance,
    &::_Heartbeat_default_instance_._instance,
    &::_RequestWorldData_default_instance_._instance,
    &::_WorldData_default_instance_._instance,
    &::_AssignCharacter_default_instance_._instance,
    &::_PlayerIn_default_instance_._instance,
    &::_PlayerOut_default_instance_._instance,
    &::_PlayerInitialData_default_instance_._instance,
    &::_PlayerPosition_default_instance_._instance,
    &::_MonsterInitialData_default_instance_._instance,
    &::_MonsterPosition_default_instance_._instance,
    &::_AnimationClip_default_instance_._instance,
};
const char descriptor_table_protodef_ZSProtocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\020ZSProtocol.proto\"\343\001\n\tZSWrapper\022$\n\004type"
    "\030\001 \001(\0162\026.ZSWrapper.MessageType\022\017\n\007payloa"
    "d\030\002 \001(\014\"\236\001\n\013MessageType\022\r\n\tWORLDDATA\020\000\022\023"
    "\n\017ASSIGNCHARACTER\020\001\022\025\n\021PLAYERINITIALDATA"
    "\020\004\022\022\n\016PLAYERPOSITION\020\005\022\r\n\tHEARTBEAT\020\006\022\024\n"
    "\020REQUESTWORLDDATA\020b\022\014\n\010PLAYERIN\020c\022\r\n\tPLA"
    "YEROUT\020d\"Q\n\tHeartbeat\022 \n\007players\030\001 \003(\0132\017"
    ".PlayerPosition\022\"\n\010monsters\030\002 \003(\0132\020.Mons"
    "terPosition\"%\n\020RequestWorldData\022\021\n\tplaye"
    "r_id\030\001 \001(\r\"W\n\tWorldData\022#\n\007players\030\001 \003(\013"
    "2\022.PlayerInitialData\022%\n\010monsters\030\002 \003(\0132\023"
    ".MonsterInitialData\"%\n\017AssignCharacter\022\022"
    "\n\nsecret_key\030\001 \001(\t\",\n\010PlayerIn\022 \n\004data\030\001"
    " \001(\0132\022.PlayerInitialData\"\036\n\tPlayerOut\022\021\n"
    "\tplayer_id\030\001 \001(\r\"\225\001\n\021PlayerInitialData\022\021"
    "\n\tplayer_id\030\001 \001(\r\022\023\n\013player_name\030\002 \001(\t\022\022"
    "\n\nposition_x\030\003 \001(\002\022\022\n\nposition_y\030\004 \001(\002\022\022"
    "\n\nposition_z\030\005 \001(\002\022\034\n\024player_movementspe"
    "ed\030\007 \001(\r\"_\n\016PlayerPosition\022\021\n\tplayer_id\030"
    "\001 \001(\r\022\022\n\nposition_x\030\002 \001(\002\022\022\n\nposition_y\030"
    "\003 \001(\002\022\022\n\nposition_z\030\004 \001(\002\"\232\001\n\022MonsterIni"
    "tialData\022\022\n\nmonster_id\030\001 \001(\005\022\024\n\014monster_"
    "name\030\002 \001(\t\022\022\n\nposition_x\030\003 \001(\002\022\022\n\npositi"
    "on_y\030\004 \001(\002\022\022\n\nposition_z\030\005 \001(\002\022\036\n\026monste"
    "r_movement_speed\030\007 \001(\r\"w\n\017MonsterPositio"
    "n\022\022\n\nmonster_id\030\001 \001(\005\022\024\n\014monster_name\030\002 "
    "\001(\t\022\022\n\nposition_x\030\003 \001(\002\022\022\n\nposition_y\030\004 "
    "\001(\002\022\022\n\nposition_z\030\005 \001(\002\"\017\n\rAnimationClip"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_ZSProtocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ZSProtocol_2eproto = {
    false,
    false,
    1128,
    descriptor_table_protodef_ZSProtocol_2eproto,
    "ZSProtocol.proto",
    &descriptor_table_ZSProtocol_2eproto_once,
    nullptr,
    0,
    12,
    schemas,
    file_default_instances,
    TableStruct_ZSProtocol_2eproto::offsets,
    file_level_metadata_ZSProtocol_2eproto,
    file_level_enum_descriptors_ZSProtocol_2eproto,
    file_level_service_descriptors_ZSProtocol_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ZSProtocol_2eproto_getter() {
  return &descriptor_table_ZSProtocol_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ZSProtocol_2eproto(&descriptor_table_ZSProtocol_2eproto);
const ::google::protobuf::EnumDescriptor* ZSWrapper_MessageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ZSProtocol_2eproto);
  return file_level_enum_descriptors_ZSProtocol_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ZSWrapper_MessageType_internal_data_[] = {
    131072u, 128u, 28u, 0u, 0u, 7u, };
bool ZSWrapper_MessageType_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, ZSWrapper_MessageType_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ZSWrapper_MessageType ZSWrapper::WORLDDATA;
constexpr ZSWrapper_MessageType ZSWrapper::ASSIGNCHARACTER;
constexpr ZSWrapper_MessageType ZSWrapper::PLAYERINITIALDATA;
constexpr ZSWrapper_MessageType ZSWrapper::PLAYERPOSITION;
constexpr ZSWrapper_MessageType ZSWrapper::HEARTBEAT;
constexpr ZSWrapper_MessageType ZSWrapper::REQUESTWORLDDATA;
constexpr ZSWrapper_MessageType ZSWrapper::PLAYERIN;
constexpr ZSWrapper_MessageType ZSWrapper::PLAYEROUT;
constexpr ZSWrapper_MessageType ZSWrapper::MessageType_MIN;
constexpr ZSWrapper_MessageType ZSWrapper::MessageType_MAX;
constexpr int ZSWrapper::MessageType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class ZSWrapper::_Internal {
 public:
};

ZSWrapper::ZSWrapper(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ZSWrapper)
}
inline PROTOBUF_NDEBUG_INLINE ZSWrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_(arena, from.payload_),
        _cached_size_{0} {}

ZSWrapper::ZSWrapper(
    ::google::protobuf::Arena* arena,
    const ZSWrapper& from)
    : ::google::protobuf::Message(arena) {
  ZSWrapper* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:ZSWrapper)
}
inline PROTOBUF_NDEBUG_INLINE ZSWrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_(arena),
        _cached_size_{0} {}

inline void ZSWrapper::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
ZSWrapper::~ZSWrapper() {
  // @@protoc_insertion_point(destructor:ZSWrapper)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ZSWrapper::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.payload_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZSWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:ZSWrapper)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ZSWrapper::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ZSWrapper::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ZSWrapper_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes payload = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ZSWrapper, _impl_.payload_)}},
    // .ZSWrapper.MessageType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ZSWrapper, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ZSWrapper, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ZSWrapper.MessageType type = 1;
    {PROTOBUF_FIELD_OFFSET(ZSWrapper, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes payload = 2;
    {PROTOBUF_FIELD_OFFSET(ZSWrapper, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ZSWrapper::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZSWrapper)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ZSWrapper.MessageType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ZSWrapper)
  return target;
}

::size_t ZSWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZSWrapper)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_payload());
  }

  // .ZSWrapper.MessageType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ZSWrapper::_class_data_ = {
    ZSWrapper::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ZSWrapper::GetClassData() const {
  return &_class_data_;
}

void ZSWrapper::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ZSWrapper*>(&to_msg);
  auto& from = static_cast<const ZSWrapper&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ZSWrapper)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ZSWrapper::CopyFrom(const ZSWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZSWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZSWrapper::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZSWrapper::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZSWrapper::InternalSwap(ZSWrapper* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata ZSWrapper::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[0]);
}
// ===================================================================

class Heartbeat::_Internal {
 public:
};

Heartbeat::Heartbeat(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Heartbeat)
}
inline PROTOBUF_NDEBUG_INLINE Heartbeat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : players_{visibility, arena, from.players_},
        monsters_{visibility, arena, from.monsters_},
        _cached_size_{0} {}

Heartbeat::Heartbeat(
    ::google::protobuf::Arena* arena,
    const Heartbeat& from)
    : ::google::protobuf::Message(arena) {
  Heartbeat* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Heartbeat)
}
inline PROTOBUF_NDEBUG_INLINE Heartbeat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : players_{visibility, arena},
        monsters_{visibility, arena},
        _cached_size_{0} {}

inline void Heartbeat::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Heartbeat::~Heartbeat() {
  // @@protoc_insertion_point(destructor:Heartbeat)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Heartbeat::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:Heartbeat)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _impl_.monsters_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Heartbeat::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Heartbeat::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Heartbeat_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .MonsterPosition monsters = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.monsters_)}},
    // repeated .PlayerPosition players = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.players_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .PlayerPosition players = 1;
    {PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.players_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .MonsterPosition monsters = 2;
    {PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.monsters_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PlayerPosition>()},
    {::_pbi::TcParser::GetTable<::MonsterPosition>()},
  }}, {{
  }},
};

::uint8_t* Heartbeat::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Heartbeat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .PlayerPosition players = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_size()); i < n; i++) {
    const auto& repfield = this->_internal_players().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .MonsterPosition monsters = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_monsters_size()); i < n; i++) {
    const auto& repfield = this->_internal_monsters().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Heartbeat)
  return target;
}

::size_t Heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Heartbeat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PlayerPosition players = 1;
  total_size += 1UL * this->_internal_players_size();
  for (const auto& msg : this->_internal_players()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .MonsterPosition monsters = 2;
  total_size += 1UL * this->_internal_monsters_size();
  for (const auto& msg : this->_internal_monsters()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Heartbeat::_class_data_ = {
    Heartbeat::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Heartbeat::GetClassData() const {
  return &_class_data_;
}

void Heartbeat::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Heartbeat*>(&to_msg);
  auto& from = static_cast<const Heartbeat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Heartbeat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  _this->_internal_mutable_monsters()->MergeFrom(
      from._internal_monsters());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Heartbeat::CopyFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Heartbeat::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Heartbeat::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Heartbeat::InternalSwap(Heartbeat* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  _impl_.monsters_.InternalSwap(&other->_impl_.monsters_);
}

::google::protobuf::Metadata Heartbeat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[1]);
}
// ===================================================================

class RequestWorldData::_Internal {
 public:
};

RequestWorldData::RequestWorldData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RequestWorldData)
}
RequestWorldData::RequestWorldData(
    ::google::protobuf::Arena* arena, const RequestWorldData& from)
    : RequestWorldData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RequestWorldData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RequestWorldData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_id_ = {};
}
RequestWorldData::~RequestWorldData() {
  // @@protoc_insertion_point(destructor:RequestWorldData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestWorldData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RequestWorldData::Clear() {
// @@protoc_insertion_point(message_clear_start:RequestWorldData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RequestWorldData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RequestWorldData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RequestWorldData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestWorldData, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestWorldData, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(RequestWorldData, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RequestWorldData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RequestWorldData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RequestWorldData)
  return target;
}

::size_t RequestWorldData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RequestWorldData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RequestWorldData::_class_data_ = {
    RequestWorldData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RequestWorldData::GetClassData() const {
  return &_class_data_;
}

void RequestWorldData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RequestWorldData*>(&to_msg);
  auto& from = static_cast<const RequestWorldData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RequestWorldData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestWorldData::CopyFrom(const RequestWorldData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RequestWorldData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RequestWorldData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RequestWorldData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RequestWorldData::InternalSwap(RequestWorldData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.player_id_, other->_impl_.player_id_);
}

::google::protobuf::Metadata RequestWorldData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[2]);
}
// ===================================================================

class WorldData::_Internal {
 public:
};

WorldData::WorldData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:WorldData)
}
inline PROTOBUF_NDEBUG_INLINE WorldData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : players_{visibility, arena, from.players_},
        monsters_{visibility, arena, from.monsters_},
        _cached_size_{0} {}

WorldData::WorldData(
    ::google::protobuf::Arena* arena,
    const WorldData& from)
    : ::google::protobuf::Message(arena) {
  WorldData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:WorldData)
}
inline PROTOBUF_NDEBUG_INLINE WorldData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : players_{visibility, arena},
        monsters_{visibility, arena},
        _cached_size_{0} {}

inline void WorldData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WorldData::~WorldData() {
  // @@protoc_insertion_point(destructor:WorldData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorldData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WorldData::Clear() {
// @@protoc_insertion_point(message_clear_start:WorldData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _impl_.monsters_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorldData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> WorldData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WorldData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .MonsterInitialData monsters = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(WorldData, _impl_.monsters_)}},
    // repeated .PlayerInitialData players = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WorldData, _impl_.players_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .PlayerInitialData players = 1;
    {PROTOBUF_FIELD_OFFSET(WorldData, _impl_.players_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .MonsterInitialData monsters = 2;
    {PROTOBUF_FIELD_OFFSET(WorldData, _impl_.monsters_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PlayerInitialData>()},
    {::_pbi::TcParser::GetTable<::MonsterInitialData>()},
  }}, {{
  }},
};

::uint8_t* WorldData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WorldData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .PlayerInitialData players = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_size()); i < n; i++) {
    const auto& repfield = this->_internal_players().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .MonsterInitialData monsters = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_monsters_size()); i < n; i++) {
    const auto& repfield = this->_internal_monsters().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorldData)
  return target;
}

::size_t WorldData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorldData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PlayerInitialData players = 1;
  total_size += 1UL * this->_internal_players_size();
  for (const auto& msg : this->_internal_players()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .MonsterInitialData monsters = 2;
  total_size += 1UL * this->_internal_monsters_size();
  for (const auto& msg : this->_internal_monsters()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorldData::_class_data_ = {
    WorldData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WorldData::GetClassData() const {
  return &_class_data_;
}

void WorldData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorldData*>(&to_msg);
  auto& from = static_cast<const WorldData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:WorldData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  _this->_internal_mutable_monsters()->MergeFrom(
      from._internal_monsters());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorldData::CopyFrom(const WorldData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorldData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorldData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WorldData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WorldData::InternalSwap(WorldData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  _impl_.monsters_.InternalSwap(&other->_impl_.monsters_);
}

::google::protobuf::Metadata WorldData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[3]);
}
// ===================================================================

class AssignCharacter::_Internal {
 public:
};

AssignCharacter::AssignCharacter(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AssignCharacter)
}
inline PROTOBUF_NDEBUG_INLINE AssignCharacter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : secret_key_(arena, from.secret_key_),
        _cached_size_{0} {}

AssignCharacter::AssignCharacter(
    ::google::protobuf::Arena* arena,
    const AssignCharacter& from)
    : ::google::protobuf::Message(arena) {
  AssignCharacter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:AssignCharacter)
}
inline PROTOBUF_NDEBUG_INLINE AssignCharacter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : secret_key_(arena),
        _cached_size_{0} {}

inline void AssignCharacter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AssignCharacter::~AssignCharacter() {
  // @@protoc_insertion_point(destructor:AssignCharacter)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AssignCharacter::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.secret_key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AssignCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:AssignCharacter)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secret_key_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AssignCharacter::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 34, 2> AssignCharacter::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AssignCharacter_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string secret_key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AssignCharacter, _impl_.secret_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string secret_key = 1;
    {PROTOBUF_FIELD_OFFSET(AssignCharacter, _impl_.secret_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\12\0\0\0\0\0\0"
    "AssignCharacter"
    "secret_key"
  }},
};

::uint8_t* AssignCharacter::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AssignCharacter)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string secret_key = 1;
  if (!this->_internal_secret_key().empty()) {
    const std::string& _s = this->_internal_secret_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "AssignCharacter.secret_key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AssignCharacter)
  return target;
}

::size_t AssignCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AssignCharacter)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string secret_key = 1;
  if (!this->_internal_secret_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_secret_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AssignCharacter::_class_data_ = {
    AssignCharacter::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AssignCharacter::GetClassData() const {
  return &_class_data_;
}

void AssignCharacter::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AssignCharacter*>(&to_msg);
  auto& from = static_cast<const AssignCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AssignCharacter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_secret_key().empty()) {
    _this->_internal_set_secret_key(from._internal_secret_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AssignCharacter::CopyFrom(const AssignCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AssignCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AssignCharacter::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AssignCharacter::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AssignCharacter::InternalSwap(AssignCharacter* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secret_key_, &other->_impl_.secret_key_, arena);
}

::google::protobuf::Metadata AssignCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[4]);
}
// ===================================================================

class PlayerIn::_Internal {
 public:
  using HasBits = decltype(std::declval<PlayerIn>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PlayerIn, _impl_._has_bits_);
  static const ::PlayerInitialData& data(const PlayerIn* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PlayerInitialData& PlayerIn::_Internal::data(const PlayerIn* msg) {
  return *msg->_impl_.data_;
}
PlayerIn::PlayerIn(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerIn)
}
inline PROTOBUF_NDEBUG_INLINE PlayerIn::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PlayerIn::PlayerIn(
    ::google::protobuf::Arena* arena,
    const PlayerIn& from)
    : ::google::protobuf::Message(arena) {
  PlayerIn* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.data_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::PlayerInitialData>(arena, *from._impl_.data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:PlayerIn)
}
inline PROTOBUF_NDEBUG_INLINE PlayerIn::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerIn::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.data_ = {};
}
PlayerIn::~PlayerIn() {
  // @@protoc_insertion_point(destructor:PlayerIn)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerIn::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.data_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PlayerIn::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerIn)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerIn::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PlayerIn::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlayerIn, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PlayerIn_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .PlayerInitialData data = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PlayerIn, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .PlayerInitialData data = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerIn, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PlayerInitialData>()},
  }}, {{
  }},
};

::uint8_t* PlayerIn::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerIn)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .PlayerInitialData data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerIn)
  return target;
}

::size_t PlayerIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerIn)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PlayerInitialData data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PlayerIn::_class_data_ = {
    PlayerIn::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PlayerIn::GetClassData() const {
  return &_class_data_;
}

void PlayerIn::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PlayerIn*>(&to_msg);
  auto& from = static_cast<const PlayerIn&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerIn)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_data()->::PlayerInitialData::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerIn::CopyFrom(const PlayerIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerIn::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PlayerIn::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PlayerIn::InternalSwap(PlayerIn* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.data_, other->_impl_.data_);
}

::google::protobuf::Metadata PlayerIn::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[5]);
}
// ===================================================================

class PlayerOut::_Internal {
 public:
};

PlayerOut::PlayerOut(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerOut)
}
PlayerOut::PlayerOut(
    ::google::protobuf::Arena* arena, const PlayerOut& from)
    : PlayerOut(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PlayerOut::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerOut::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_id_ = {};
}
PlayerOut::~PlayerOut() {
  // @@protoc_insertion_point(destructor:PlayerOut)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerOut::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PlayerOut::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerOut)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerOut::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PlayerOut::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PlayerOut_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerOut, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerOut, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerOut, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PlayerOut::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerOut)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerOut)
  return target;
}

::size_t PlayerOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerOut)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PlayerOut::_class_data_ = {
    PlayerOut::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PlayerOut::GetClassData() const {
  return &_class_data_;
}

void PlayerOut::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PlayerOut*>(&to_msg);
  auto& from = static_cast<const PlayerOut&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerOut)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerOut::CopyFrom(const PlayerOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerOut::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PlayerOut::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PlayerOut::InternalSwap(PlayerOut* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.player_id_, other->_impl_.player_id_);
}

::google::protobuf::Metadata PlayerOut::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[6]);
}
// ===================================================================

class PlayerInitialData::_Internal {
 public:
};

PlayerInitialData::PlayerInitialData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerInitialData)
}
inline PROTOBUF_NDEBUG_INLINE PlayerInitialData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : player_name_(arena, from.player_name_),
        _cached_size_{0} {}

PlayerInitialData::PlayerInitialData(
    ::google::protobuf::Arena* arena,
    const PlayerInitialData& from)
    : ::google::protobuf::Message(arena) {
  PlayerInitialData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, player_id_),
           offsetof(Impl_, player_movementspeed_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::player_movementspeed_));

  // @@protoc_insertion_point(copy_constructor:PlayerInitialData)
}
inline PROTOBUF_NDEBUG_INLINE PlayerInitialData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : player_name_(arena),
        _cached_size_{0} {}

inline void PlayerInitialData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           0,
           offsetof(Impl_, player_movementspeed_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::player_movementspeed_));
}
PlayerInitialData::~PlayerInitialData() {
  // @@protoc_insertion_point(destructor:PlayerInitialData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerInitialData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.player_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PlayerInitialData::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerInitialData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_name_.ClearToEmpty();
  ::memset(&_impl_.player_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.player_movementspeed_) -
      reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.player_movementspeed_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerInitialData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 37, 2> PlayerInitialData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PlayerInitialData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerInitialData, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_id_)}},
    // string player_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_name_)}},
    // float position_x = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_x_)}},
    // float position_y = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_y_)}},
    // float position_z = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_z_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 player_movementspeed = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerInitialData, _impl_.player_movementspeed_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_movementspeed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string player_name = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float position_x = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_y = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_z = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 player_movementspeed = 7;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_movementspeed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\21\0\13\0\0\0\0\0"
    "PlayerInitialData"
    "player_name"
  }},
};

::uint8_t* PlayerInitialData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerInitialData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  // string player_name = 2;
  if (!this->_internal_player_name().empty()) {
    const std::string& _s = this->_internal_player_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "PlayerInitialData.player_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // float position_x = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_position_x(), target);
  }

  // float position_y = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_position_y(), target);
  }

  // float position_z = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_position_z(), target);
  }

  // uint32 player_movementspeed = 7;
  if (this->_internal_player_movementspeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_player_movementspeed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerInitialData)
  return target;
}

::size_t PlayerInitialData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerInitialData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string player_name = 2;
  if (!this->_internal_player_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_player_name());
  }

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  // float position_x = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    total_size += 5;
  }

  // float position_y = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    total_size += 5;
  }

  // float position_z = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    total_size += 5;
  }

  // uint32 player_movementspeed = 7;
  if (this->_internal_player_movementspeed() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_movementspeed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PlayerInitialData::_class_data_ = {
    PlayerInitialData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PlayerInitialData::GetClassData() const {
  return &_class_data_;
}

void PlayerInitialData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PlayerInitialData*>(&to_msg);
  auto& from = static_cast<const PlayerInitialData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerInitialData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_player_name().empty()) {
    _this->_internal_set_player_name(from._internal_player_name());
  }
  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = from._internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    _this->_internal_set_position_x(from._internal_position_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = from._internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    _this->_internal_set_position_y(from._internal_position_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = from._internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    _this->_internal_set_position_z(from._internal_position_z());
  }
  if (from._internal_player_movementspeed() != 0) {
    _this->_internal_set_player_movementspeed(from._internal_player_movementspeed());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerInitialData::CopyFrom(const PlayerInitialData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerInitialData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerInitialData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PlayerInitialData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PlayerInitialData::InternalSwap(PlayerInitialData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_name_, &other->_impl_.player_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_movementspeed_)
      + sizeof(PlayerInitialData::_impl_.player_movementspeed_)
      - PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::google::protobuf::Metadata PlayerInitialData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[7]);
}
// ===================================================================

class PlayerPosition::_Internal {
 public:
};

PlayerPosition::PlayerPosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerPosition)
}
PlayerPosition::PlayerPosition(
    ::google::protobuf::Arena* arena, const PlayerPosition& from)
    : PlayerPosition(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PlayerPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           0,
           offsetof(Impl_, position_z_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::position_z_));
}
PlayerPosition::~PlayerPosition() {
  // @@protoc_insertion_point(destructor:PlayerPosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerPosition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PlayerPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerPosition)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.player_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.position_z_) -
      reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.position_z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerPosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> PlayerPosition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PlayerPosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float position_z = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_z_)}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerPosition, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.player_id_)}},
    // float position_x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_x_)}},
    // float position_y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float position_x = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_y = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_z = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PlayerPosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  // float position_x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_position_x(), target);
  }

  // float position_y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_position_y(), target);
  }

  // float position_z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_position_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerPosition)
  return target;
}

::size_t PlayerPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  // float position_x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    total_size += 5;
  }

  // float position_y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    total_size += 5;
  }

  // float position_z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PlayerPosition::_class_data_ = {
    PlayerPosition::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PlayerPosition::GetClassData() const {
  return &_class_data_;
}

void PlayerPosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PlayerPosition*>(&to_msg);
  auto& from = static_cast<const PlayerPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = from._internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    _this->_internal_set_position_x(from._internal_position_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = from._internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    _this->_internal_set_position_y(from._internal_position_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = from._internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    _this->_internal_set_position_z(from._internal_position_z());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerPosition::CopyFrom(const PlayerPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerPosition::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PlayerPosition::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PlayerPosition::InternalSwap(PlayerPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_z_)
      + sizeof(PlayerPosition::_impl_.position_z_)
      - PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::google::protobuf::Metadata PlayerPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[8]);
}
// ===================================================================

class MonsterInitialData::_Internal {
 public:
};

MonsterInitialData::MonsterInitialData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonsterInitialData)
}
inline PROTOBUF_NDEBUG_INLINE MonsterInitialData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : monster_name_(arena, from.monster_name_),
        _cached_size_{0} {}

MonsterInitialData::MonsterInitialData(
    ::google::protobuf::Arena* arena,
    const MonsterInitialData& from)
    : ::google::protobuf::Message(arena) {
  MonsterInitialData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, monster_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, monster_id_),
           offsetof(Impl_, monster_movement_speed_) -
               offsetof(Impl_, monster_id_) +
               sizeof(Impl_::monster_movement_speed_));

  // @@protoc_insertion_point(copy_constructor:MonsterInitialData)
}
inline PROTOBUF_NDEBUG_INLINE MonsterInitialData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : monster_name_(arena),
        _cached_size_{0} {}

inline void MonsterInitialData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, monster_id_),
           0,
           offsetof(Impl_, monster_movement_speed_) -
               offsetof(Impl_, monster_id_) +
               sizeof(Impl_::monster_movement_speed_));
}
MonsterInitialData::~MonsterInitialData() {
  // @@protoc_insertion_point(destructor:MonsterInitialData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MonsterInitialData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.monster_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MonsterInitialData::Clear() {
// @@protoc_insertion_point(message_clear_start:MonsterInitialData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.monster_name_.ClearToEmpty();
  ::memset(&_impl_.monster_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.monster_movement_speed_) -
      reinterpret_cast<char*>(&_impl_.monster_id_)) + sizeof(_impl_.monster_movement_speed_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MonsterInitialData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 39, 2> MonsterInitialData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MonsterInitialData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 monster_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonsterInitialData, _impl_.monster_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.monster_id_)}},
    // string monster_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.monster_name_)}},
    // float position_x = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.position_x_)}},
    // float position_y = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.position_y_)}},
    // float position_z = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.position_z_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 monster_movement_speed = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonsterInitialData, _impl_.monster_movement_speed_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.monster_movement_speed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 monster_id = 1;
    {PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.monster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string monster_name = 2;
    {PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.monster_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float position_x = 3;
    {PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.position_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_y = 4;
    {PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.position_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_z = 5;
    {PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.position_z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 monster_movement_speed = 7;
    {PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.monster_movement_speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\22\0\14\0\0\0\0\0"
    "MonsterInitialData"
    "monster_name"
  }},
};

::uint8_t* MonsterInitialData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonsterInitialData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 monster_id = 1;
  if (this->_internal_monster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_monster_id(), target);
  }

  // string monster_name = 2;
  if (!this->_internal_monster_name().empty()) {
    const std::string& _s = this->_internal_monster_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonsterInitialData.monster_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // float position_x = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_position_x(), target);
  }

  // float position_y = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_position_y(), target);
  }

  // float position_z = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_position_z(), target);
  }

  // uint32 monster_movement_speed = 7;
  if (this->_internal_monster_movement_speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_monster_movement_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonsterInitialData)
  return target;
}

::size_t MonsterInitialData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonsterInitialData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string monster_name = 2;
  if (!this->_internal_monster_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_monster_name());
  }

  // int32 monster_id = 1;
  if (this->_internal_monster_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_monster_id());
  }

  // float position_x = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    total_size += 5;
  }

  // float position_y = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    total_size += 5;
  }

  // float position_z = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    total_size += 5;
  }

  // uint32 monster_movement_speed = 7;
  if (this->_internal_monster_movement_speed() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_monster_movement_speed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MonsterInitialData::_class_data_ = {
    MonsterInitialData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MonsterInitialData::GetClassData() const {
  return &_class_data_;
}

void MonsterInitialData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MonsterInitialData*>(&to_msg);
  auto& from = static_cast<const MonsterInitialData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonsterInitialData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_monster_name().empty()) {
    _this->_internal_set_monster_name(from._internal_monster_name());
  }
  if (from._internal_monster_id() != 0) {
    _this->_internal_set_monster_id(from._internal_monster_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = from._internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    _this->_internal_set_position_x(from._internal_position_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = from._internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    _this->_internal_set_position_y(from._internal_position_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = from._internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    _this->_internal_set_position_z(from._internal_position_z());
  }
  if (from._internal_monster_movement_speed() != 0) {
    _this->_internal_set_monster_movement_speed(from._internal_monster_movement_speed());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MonsterInitialData::CopyFrom(const MonsterInitialData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonsterInitialData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MonsterInitialData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MonsterInitialData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MonsterInitialData::InternalSwap(MonsterInitialData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.monster_name_, &other->_impl_.monster_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.monster_movement_speed_)
      + sizeof(MonsterInitialData::_impl_.monster_movement_speed_)
      - PROTOBUF_FIELD_OFFSET(MonsterInitialData, _impl_.monster_id_)>(
          reinterpret_cast<char*>(&_impl_.monster_id_),
          reinterpret_cast<char*>(&other->_impl_.monster_id_));
}

::google::protobuf::Metadata MonsterInitialData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[9]);
}
// ===================================================================

class MonsterPosition::_Internal {
 public:
};

MonsterPosition::MonsterPosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonsterPosition)
}
inline PROTOBUF_NDEBUG_INLINE MonsterPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : monster_name_(arena, from.monster_name_),
        _cached_size_{0} {}

MonsterPosition::MonsterPosition(
    ::google::protobuf::Arena* arena,
    const MonsterPosition& from)
    : ::google::protobuf::Message(arena) {
  MonsterPosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, monster_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, monster_id_),
           offsetof(Impl_, position_z_) -
               offsetof(Impl_, monster_id_) +
               sizeof(Impl_::position_z_));

  // @@protoc_insertion_point(copy_constructor:MonsterPosition)
}
inline PROTOBUF_NDEBUG_INLINE MonsterPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : monster_name_(arena),
        _cached_size_{0} {}

inline void MonsterPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, monster_id_),
           0,
           offsetof(Impl_, position_z_) -
               offsetof(Impl_, monster_id_) +
               sizeof(Impl_::position_z_));
}
MonsterPosition::~MonsterPosition() {
  // @@protoc_insertion_point(destructor:MonsterPosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MonsterPosition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.monster_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MonsterPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:MonsterPosition)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.monster_name_.ClearToEmpty();
  ::memset(&_impl_.monster_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.position_z_) -
      reinterpret_cast<char*>(&_impl_.monster_id_)) + sizeof(_impl_.position_z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MonsterPosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 36, 2> MonsterPosition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MonsterPosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 monster_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonsterPosition, _impl_.monster_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.monster_id_)}},
    // string monster_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.monster_name_)}},
    // float position_x = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_x_)}},
    // float position_y = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_y_)}},
    // float position_z = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_z_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 monster_id = 1;
    {PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.monster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string monster_name = 2;
    {PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.monster_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float position_x = 3;
    {PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_y = 4;
    {PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_z = 5;
    {PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\17\0\14\0\0\0\0\0"
    "MonsterPosition"
    "monster_name"
  }},
};

::uint8_t* MonsterPosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonsterPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 monster_id = 1;
  if (this->_internal_monster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_monster_id(), target);
  }

  // string monster_name = 2;
  if (!this->_internal_monster_name().empty()) {
    const std::string& _s = this->_internal_monster_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonsterPosition.monster_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // float position_x = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_position_x(), target);
  }

  // float position_y = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_position_y(), target);
  }

  // float position_z = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_position_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonsterPosition)
  return target;
}

::size_t MonsterPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonsterPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string monster_name = 2;
  if (!this->_internal_monster_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_monster_name());
  }

  // int32 monster_id = 1;
  if (this->_internal_monster_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_monster_id());
  }

  // float position_x = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    total_size += 5;
  }

  // float position_y = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    total_size += 5;
  }

  // float position_z = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MonsterPosition::_class_data_ = {
    MonsterPosition::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MonsterPosition::GetClassData() const {
  return &_class_data_;
}

void MonsterPosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MonsterPosition*>(&to_msg);
  auto& from = static_cast<const MonsterPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonsterPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_monster_name().empty()) {
    _this->_internal_set_monster_name(from._internal_monster_name());
  }
  if (from._internal_monster_id() != 0) {
    _this->_internal_set_monster_id(from._internal_monster_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = from._internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    _this->_internal_set_position_x(from._internal_position_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = from._internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    _this->_internal_set_position_y(from._internal_position_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = from._internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    _this->_internal_set_position_z(from._internal_position_z());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MonsterPosition::CopyFrom(const MonsterPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonsterPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MonsterPosition::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MonsterPosition::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MonsterPosition::InternalSwap(MonsterPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.monster_name_, &other->_impl_.monster_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_z_)
      + sizeof(MonsterPosition::_impl_.position_z_)
      - PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.monster_id_)>(
          reinterpret_cast<char*>(&_impl_.monster_id_),
          reinterpret_cast<char*>(&other->_impl_.monster_id_));
}

::google::protobuf::Metadata MonsterPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[10]);
}
// ===================================================================

class AnimationClip::_Internal {
 public:
};

AnimationClip::AnimationClip(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:AnimationClip)
}
AnimationClip::AnimationClip(
    ::google::protobuf::Arena* arena,
    const AnimationClip& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  AnimationClip* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:AnimationClip)
}









::google::protobuf::Metadata AnimationClip::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ZSProtocol_2eproto_getter, &descriptor_table_ZSProtocol_2eproto_once,
      file_level_metadata_ZSProtocol_2eproto[11]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

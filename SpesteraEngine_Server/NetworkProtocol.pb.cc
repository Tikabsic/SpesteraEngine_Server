// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetworkProtocol.proto

#include "NetworkProtocol.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Wrapper::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::Wrapper_MessageType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Wrapper::Wrapper(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WrapperDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WrapperDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WrapperDefaultTypeInternal() {}
  union {
    Wrapper _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WrapperDefaultTypeInternal _Wrapper_default_instance_;

inline constexpr Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;

inline constexpr RequestLogin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestLogin::RequestLogin(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestLoginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestLoginDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestLoginDefaultTypeInternal() {}
  union {
    RequestLogin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestLoginDefaultTypeInternal _RequestLogin_default_instance_;

inline constexpr PlayerPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{0u},
        position_x_{0},
        position_y_{0},
        position_z_{0},
        rotation_y_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerPosition::PlayerPosition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerPositionDefaultTypeInternal() {}
  union {
    PlayerPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerPositionDefaultTypeInternal _PlayerPosition_default_instance_;

inline constexpr PlayerInitialData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{0u},
        position_x_{0},
        position_y_{0},
        position_z_{0},
        rotation_y_{0u},
        player_movementspeed_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlayerInitialData::PlayerInitialData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlayerInitialDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlayerInitialDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlayerInitialDataDefaultTypeInternal() {}
  union {
    PlayerInitialData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlayerInitialDataDefaultTypeInternal _PlayerInitialData_default_instance_;

inline constexpr MonsterPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : monster_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        monster_id_{0},
        position_x_{0},
        position_y_{0},
        position_z_{0},
        rotation_y_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MonsterPosition::MonsterPosition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MonsterPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonsterPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonsterPositionDefaultTypeInternal() {}
  union {
    MonsterPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonsterPositionDefaultTypeInternal _MonsterPosition_default_instance_;

inline constexpr ClientLogout::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : player_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClientLogout::ClientLogout(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClientLogoutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientLogoutDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientLogoutDefaultTypeInternal() {}
  union {
    ClientLogout _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientLogoutDefaultTypeInternal _ClientLogout_default_instance_;

inline constexpr AssignId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AssignId::AssignId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AssignIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssignIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssignIdDefaultTypeInternal() {}
  union {
    AssignId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssignIdDefaultTypeInternal _AssignId_default_instance_;

inline constexpr Heartbeat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : players_{},
        monsters_{},
        timestamp_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Heartbeat::Heartbeat(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HeartbeatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatDefaultTypeInternal() {}
  union {
    Heartbeat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatDefaultTypeInternal _Heartbeat_default_instance_;

inline constexpr ClientLogin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        player_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ClientLogin::ClientLogin(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClientLoginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientLoginDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientLoginDefaultTypeInternal() {}
  union {
    ClientLogin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientLoginDefaultTypeInternal _ClientLogin_default_instance_;
static ::_pb::Metadata file_level_metadata_NetworkProtocol_2eproto[10];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_NetworkProtocol_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_NetworkProtocol_2eproto = nullptr;
const ::uint32_t TableStruct_NetworkProtocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Heartbeat, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Heartbeat, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::Heartbeat, _impl_.players_),
    PROTOBUF_FIELD_OFFSET(::Heartbeat, _impl_.monsters_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::RequestLogin, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::RequestLogin, _impl_.player_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Response, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ClientLogout, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ClientLogout, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::ClientLogin, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ClientLogin, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ClientLogin, _impl_.player_data_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Wrapper, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Wrapper, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::Wrapper, _impl_.payload_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::AssignId, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::AssignId, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.position_x_),
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.position_y_),
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.position_z_),
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.rotation_y_),
    PROTOBUF_FIELD_OFFSET(::PlayerInitialData, _impl_.player_movementspeed_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::PlayerPosition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::PlayerPosition, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::PlayerPosition, _impl_.position_x_),
    PROTOBUF_FIELD_OFFSET(::PlayerPosition, _impl_.position_y_),
    PROTOBUF_FIELD_OFFSET(::PlayerPosition, _impl_.position_z_),
    PROTOBUF_FIELD_OFFSET(::PlayerPosition, _impl_.rotation_y_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _impl_.monster_id_),
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _impl_.monster_name_),
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _impl_.position_x_),
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _impl_.position_y_),
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _impl_.position_z_),
    PROTOBUF_FIELD_OFFSET(::MonsterPosition, _impl_.rotation_y_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Heartbeat)},
        {11, -1, -1, sizeof(::RequestLogin)},
        {20, -1, -1, sizeof(::Response)},
        {29, -1, -1, sizeof(::ClientLogout)},
        {38, 47, -1, sizeof(::ClientLogin)},
        {48, -1, -1, sizeof(::Wrapper)},
        {58, -1, -1, sizeof(::AssignId)},
        {67, -1, -1, sizeof(::PlayerInitialData)},
        {81, -1, -1, sizeof(::PlayerPosition)},
        {94, -1, -1, sizeof(::MonsterPosition)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_Heartbeat_default_instance_._instance,
    &::_RequestLogin_default_instance_._instance,
    &::_Response_default_instance_._instance,
    &::_ClientLogout_default_instance_._instance,
    &::_ClientLogin_default_instance_._instance,
    &::_Wrapper_default_instance_._instance,
    &::_AssignId_default_instance_._instance,
    &::_PlayerInitialData_default_instance_._instance,
    &::_PlayerPosition_default_instance_._instance,
    &::_MonsterPosition_default_instance_._instance,
};
const char descriptor_table_protodef_NetworkProtocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\025NetworkProtocol.proto\"d\n\tHeartbeat\022\021\n\t"
    "timestamp\030\001 \001(\r\022 \n\007players\030\002 \003(\0132\017.Playe"
    "rPosition\022\"\n\010monsters\030\003 \003(\0132\020.MonsterPos"
    "ition\"!\n\014RequestLogin\022\021\n\tplayer_id\030\001 \001(\r"
    "\"\030\n\010Response\022\014\n\004data\030\001 \001(\t\"!\n\014ClientLogo"
    "ut\022\021\n\tplayer_id\030\001 \001(\r\"6\n\013ClientLogin\022\'\n\013"
    "player_data\030\001 \001(\0132\022.PlayerInitialData\"\330\001"
    "\n\007Wrapper\022\"\n\004type\030\001 \001(\0162\024.Wrapper.Messag"
    "eType\022\017\n\007payload\030\002 \001(\014\"\227\001\n\013MessageType\022\013"
    "\n\007UNKNOWN\020\000\022\020\n\014REQUESTLOGIN\020\001\022\020\n\014CLIENTL"
    "OGOUT\020\002\022\017\n\013CLIENTLOGIN\020\003\022\025\n\021PLAYERINITIA"
    "LDATA\020\004\022\022\n\016PLAYERPOSITION\020\005\022\r\n\tHEARTBEAT"
    "\020\006\022\014\n\010RESPONSE\020d\"\026\n\010AssignId\022\n\n\002id\030\001 \001(\r"
    "\"\224\001\n\021PlayerInitialData\022\021\n\tplayer_id\030\001 \001("
    "\r\022\022\n\nposition_x\030\002 \001(\002\022\022\n\nposition_y\030\003 \001("
    "\002\022\022\n\nposition_z\030\004 \001(\002\022\022\n\nrotation_y\030\005 \001("
    "\r\022\034\n\024player_movementspeed\030\006 \001(\r\"s\n\016Playe"
    "rPosition\022\021\n\tplayer_id\030\001 \001(\r\022\022\n\nposition"
    "_x\030\002 \001(\002\022\022\n\nposition_y\030\003 \001(\002\022\022\n\nposition"
    "_z\030\004 \001(\002\022\022\n\nrotation_y\030\005 \001(\r\"\213\001\n\017Monster"
    "Position\022\022\n\nmonster_id\030\001 \001(\005\022\024\n\014monster_"
    "name\030\002 \001(\t\022\022\n\nposition_x\030\003 \001(\002\022\022\n\npositi"
    "on_y\030\004 \001(\002\022\022\n\nposition_z\030\005 \001(\002\022\022\n\nrotati"
    "on_y\030\006 \001(\rb\006proto3"
};
static ::absl::once_flag descriptor_table_NetworkProtocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_NetworkProtocol_2eproto = {
    false,
    false,
    938,
    descriptor_table_protodef_NetworkProtocol_2eproto,
    "NetworkProtocol.proto",
    &descriptor_table_NetworkProtocol_2eproto_once,
    nullptr,
    0,
    10,
    schemas,
    file_default_instances,
    TableStruct_NetworkProtocol_2eproto::offsets,
    file_level_metadata_NetworkProtocol_2eproto,
    file_level_enum_descriptors_NetworkProtocol_2eproto,
    file_level_service_descriptors_NetworkProtocol_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_NetworkProtocol_2eproto_getter() {
  return &descriptor_table_NetworkProtocol_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_NetworkProtocol_2eproto(&descriptor_table_NetworkProtocol_2eproto);
const ::google::protobuf::EnumDescriptor* Wrapper_MessageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_NetworkProtocol_2eproto);
  return file_level_enum_descriptors_NetworkProtocol_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Wrapper_MessageType_internal_data_[] = {
    458752u, 65536u, 100u, };
bool Wrapper_MessageType_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Wrapper_MessageType_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Wrapper_MessageType Wrapper::UNKNOWN;
constexpr Wrapper_MessageType Wrapper::REQUESTLOGIN;
constexpr Wrapper_MessageType Wrapper::CLIENTLOGOUT;
constexpr Wrapper_MessageType Wrapper::CLIENTLOGIN;
constexpr Wrapper_MessageType Wrapper::PLAYERINITIALDATA;
constexpr Wrapper_MessageType Wrapper::PLAYERPOSITION;
constexpr Wrapper_MessageType Wrapper::HEARTBEAT;
constexpr Wrapper_MessageType Wrapper::RESPONSE;
constexpr Wrapper_MessageType Wrapper::MessageType_MIN;
constexpr Wrapper_MessageType Wrapper::MessageType_MAX;
constexpr int Wrapper::MessageType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Heartbeat::_Internal {
 public:
};

Heartbeat::Heartbeat(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Heartbeat)
}
inline PROTOBUF_NDEBUG_INLINE Heartbeat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : players_{visibility, arena, from.players_},
        monsters_{visibility, arena, from.monsters_},
        _cached_size_{0} {}

Heartbeat::Heartbeat(
    ::google::protobuf::Arena* arena,
    const Heartbeat& from)
    : ::google::protobuf::Message(arena) {
  Heartbeat* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:Heartbeat)
}
inline PROTOBUF_NDEBUG_INLINE Heartbeat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : players_{visibility, arena},
        monsters_{visibility, arena},
        _cached_size_{0} {}

inline void Heartbeat::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
Heartbeat::~Heartbeat() {
  // @@protoc_insertion_point(destructor:Heartbeat)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Heartbeat::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:Heartbeat)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _impl_.monsters_.Clear();
  _impl_.timestamp_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Heartbeat::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Heartbeat::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Heartbeat_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Heartbeat, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.timestamp_)}},
    // repeated .PlayerPosition players = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.players_)}},
    // repeated .MonsterPosition monsters = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.monsters_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .PlayerPosition players = 2;
    {PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.players_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .MonsterPosition monsters = 3;
    {PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.monsters_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PlayerPosition>()},
    {::_pbi::TcParser::GetTable<::MonsterPosition>()},
  }}, {{
  }},
};

::uint8_t* Heartbeat::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Heartbeat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_timestamp(), target);
  }

  // repeated .PlayerPosition players = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_size()); i < n; i++) {
    const auto& repfield = this->_internal_players().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .MonsterPosition monsters = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_monsters_size()); i < n; i++) {
    const auto& repfield = this->_internal_monsters().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Heartbeat)
  return target;
}

::size_t Heartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Heartbeat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PlayerPosition players = 2;
  total_size += 1UL * this->_internal_players_size();
  for (const auto& msg : this->_internal_players()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .MonsterPosition monsters = 3;
  total_size += 1UL * this->_internal_monsters_size();
  for (const auto& msg : this->_internal_monsters()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // uint32 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Heartbeat::_class_data_ = {
    Heartbeat::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Heartbeat::GetClassData() const {
  return &_class_data_;
}

void Heartbeat::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Heartbeat*>(&to_msg);
  auto& from = static_cast<const Heartbeat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Heartbeat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  _this->_internal_mutable_monsters()->MergeFrom(
      from._internal_monsters());
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Heartbeat::CopyFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Heartbeat::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Heartbeat::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Heartbeat::InternalSwap(Heartbeat* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  _impl_.monsters_.InternalSwap(&other->_impl_.monsters_);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata Heartbeat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetworkProtocol_2eproto_getter, &descriptor_table_NetworkProtocol_2eproto_once,
      file_level_metadata_NetworkProtocol_2eproto[0]);
}
// ===================================================================

class RequestLogin::_Internal {
 public:
};

RequestLogin::RequestLogin(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RequestLogin)
}
RequestLogin::RequestLogin(
    ::google::protobuf::Arena* arena, const RequestLogin& from)
    : RequestLogin(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RequestLogin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RequestLogin::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_id_ = {};
}
RequestLogin::~RequestLogin() {
  // @@protoc_insertion_point(destructor:RequestLogin)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestLogin::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RequestLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:RequestLogin)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RequestLogin::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RequestLogin::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RequestLogin_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestLogin, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestLogin, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(RequestLogin, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RequestLogin::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RequestLogin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RequestLogin)
  return target;
}

::size_t RequestLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RequestLogin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RequestLogin::_class_data_ = {
    RequestLogin::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RequestLogin::GetClassData() const {
  return &_class_data_;
}

void RequestLogin::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RequestLogin*>(&to_msg);
  auto& from = static_cast<const RequestLogin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RequestLogin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestLogin::CopyFrom(const RequestLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RequestLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RequestLogin::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RequestLogin::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RequestLogin::InternalSwap(RequestLogin* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.player_id_, other->_impl_.player_id_);
}

::google::protobuf::Metadata RequestLogin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetworkProtocol_2eproto_getter, &descriptor_table_NetworkProtocol_2eproto_once,
      file_level_metadata_NetworkProtocol_2eproto[1]);
}
// ===================================================================

class Response::_Internal {
 public:
};

Response::Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_(arena, from.data_),
        _cached_size_{0} {}

Response::Response(
    ::google::protobuf::Arena* arena,
    const Response& from)
    : ::google::protobuf::Message(arena) {
  Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Response::~Response() {
  // @@protoc_insertion_point(destructor:Response)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Response::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Response)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Response::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 21, 2> Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Response_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string data = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string data = 1;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\10\4\0\0\0\0\0\0"
    "Response"
    "data"
  }},
};

::uint8_t* Response::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Response.data");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response)
  return target;
}

::size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Response::_class_data_ = {
    Response::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Response::GetClassData() const {
  return &_class_data_;
}

void Response::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Response*>(&to_msg);
  auto& from = static_cast<const Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Response::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Response::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Response::InternalSwap(Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetworkProtocol_2eproto_getter, &descriptor_table_NetworkProtocol_2eproto_once,
      file_level_metadata_NetworkProtocol_2eproto[2]);
}
// ===================================================================

class ClientLogout::_Internal {
 public:
};

ClientLogout::ClientLogout(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientLogout)
}
ClientLogout::ClientLogout(
    ::google::protobuf::Arena* arena, const ClientLogout& from)
    : ClientLogout(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ClientLogout::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ClientLogout::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_id_ = {};
}
ClientLogout::~ClientLogout() {
  // @@protoc_insertion_point(destructor:ClientLogout)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClientLogout::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ClientLogout::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientLogout)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClientLogout::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ClientLogout::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ClientLogout_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClientLogout, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ClientLogout, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(ClientLogout, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ClientLogout::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientLogout)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientLogout)
  return target;
}

::size_t ClientLogout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientLogout)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ClientLogout::_class_data_ = {
    ClientLogout::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ClientLogout::GetClassData() const {
  return &_class_data_;
}

void ClientLogout::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ClientLogout*>(&to_msg);
  auto& from = static_cast<const ClientLogout&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ClientLogout)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientLogout::CopyFrom(const ClientLogout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClientLogout::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ClientLogout::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ClientLogout::InternalSwap(ClientLogout* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.player_id_, other->_impl_.player_id_);
}

::google::protobuf::Metadata ClientLogout::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetworkProtocol_2eproto_getter, &descriptor_table_NetworkProtocol_2eproto_once,
      file_level_metadata_NetworkProtocol_2eproto[3]);
}
// ===================================================================

class ClientLogin::_Internal {
 public:
  using HasBits = decltype(std::declval<ClientLogin>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ClientLogin, _impl_._has_bits_);
  static const ::PlayerInitialData& player_data(const ClientLogin* msg);
  static void set_has_player_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PlayerInitialData& ClientLogin::_Internal::player_data(const ClientLogin* msg) {
  return *msg->_impl_.player_data_;
}
ClientLogin::ClientLogin(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientLogin)
}
inline PROTOBUF_NDEBUG_INLINE ClientLogin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ClientLogin::ClientLogin(
    ::google::protobuf::Arena* arena,
    const ClientLogin& from)
    : ::google::protobuf::Message(arena) {
  ClientLogin* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.player_data_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::PlayerInitialData>(arena, *from._impl_.player_data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ClientLogin)
}
inline PROTOBUF_NDEBUG_INLINE ClientLogin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ClientLogin::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_data_ = {};
}
ClientLogin::~ClientLogin() {
  // @@protoc_insertion_point(destructor:ClientLogin)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClientLogin::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.player_data_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ClientLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientLogin)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.player_data_ != nullptr);
    _impl_.player_data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClientLogin::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ClientLogin::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClientLogin, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ClientLogin_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .PlayerInitialData player_data = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ClientLogin, _impl_.player_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .PlayerInitialData player_data = 1;
    {PROTOBUF_FIELD_OFFSET(ClientLogin, _impl_.player_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::PlayerInitialData>()},
  }}, {{
  }},
};

::uint8_t* ClientLogin::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientLogin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .PlayerInitialData player_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::player_data(this),
        _Internal::player_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientLogin)
  return target;
}

::size_t ClientLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientLogin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PlayerInitialData player_data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.player_data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ClientLogin::_class_data_ = {
    ClientLogin::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ClientLogin::GetClassData() const {
  return &_class_data_;
}

void ClientLogin::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ClientLogin*>(&to_msg);
  auto& from = static_cast<const ClientLogin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ClientLogin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_player_data()->::PlayerInitialData::MergeFrom(
        from._internal_player_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientLogin::CopyFrom(const ClientLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClientLogin::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ClientLogin::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ClientLogin::InternalSwap(ClientLogin* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_data_, other->_impl_.player_data_);
}

::google::protobuf::Metadata ClientLogin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetworkProtocol_2eproto_getter, &descriptor_table_NetworkProtocol_2eproto_once,
      file_level_metadata_NetworkProtocol_2eproto[4]);
}
// ===================================================================

class Wrapper::_Internal {
 public:
};

Wrapper::Wrapper(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Wrapper)
}
inline PROTOBUF_NDEBUG_INLINE Wrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_(arena, from.payload_),
        _cached_size_{0} {}

Wrapper::Wrapper(
    ::google::protobuf::Arena* arena,
    const Wrapper& from)
    : ::google::protobuf::Message(arena) {
  Wrapper* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:Wrapper)
}
inline PROTOBUF_NDEBUG_INLINE Wrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_(arena),
        _cached_size_{0} {}

inline void Wrapper::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
Wrapper::~Wrapper() {
  // @@protoc_insertion_point(destructor:Wrapper)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Wrapper::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.payload_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Wrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:Wrapper)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Wrapper::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Wrapper::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Wrapper_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes payload = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Wrapper, _impl_.payload_)}},
    // .Wrapper.MessageType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Wrapper, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Wrapper, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Wrapper.MessageType type = 1;
    {PROTOBUF_FIELD_OFFSET(Wrapper, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes payload = 2;
    {PROTOBUF_FIELD_OFFSET(Wrapper, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Wrapper::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Wrapper)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .Wrapper.MessageType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Wrapper)
  return target;
}

::size_t Wrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Wrapper)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_payload());
  }

  // .Wrapper.MessageType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Wrapper::_class_data_ = {
    Wrapper::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Wrapper::GetClassData() const {
  return &_class_data_;
}

void Wrapper::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Wrapper*>(&to_msg);
  auto& from = static_cast<const Wrapper&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Wrapper)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Wrapper::CopyFrom(const Wrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Wrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Wrapper::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Wrapper::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Wrapper::InternalSwap(Wrapper* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata Wrapper::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetworkProtocol_2eproto_getter, &descriptor_table_NetworkProtocol_2eproto_once,
      file_level_metadata_NetworkProtocol_2eproto[5]);
}
// ===================================================================

class AssignId::_Internal {
 public:
};

AssignId::AssignId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AssignId)
}
AssignId::AssignId(
    ::google::protobuf::Arena* arena, const AssignId& from)
    : AssignId(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AssignId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AssignId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
AssignId::~AssignId() {
  // @@protoc_insertion_point(destructor:AssignId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AssignId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AssignId::Clear() {
// @@protoc_insertion_point(message_clear_start:AssignId)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AssignId::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AssignId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AssignId_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AssignId, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AssignId, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(AssignId, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AssignId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AssignId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AssignId)
  return target;
}

::size_t AssignId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AssignId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AssignId::_class_data_ = {
    AssignId::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AssignId::GetClassData() const {
  return &_class_data_;
}

void AssignId::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AssignId*>(&to_msg);
  auto& from = static_cast<const AssignId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AssignId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AssignId::CopyFrom(const AssignId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AssignId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AssignId::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AssignId::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AssignId::InternalSwap(AssignId* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata AssignId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetworkProtocol_2eproto_getter, &descriptor_table_NetworkProtocol_2eproto_once,
      file_level_metadata_NetworkProtocol_2eproto[6]);
}
// ===================================================================

class PlayerInitialData::_Internal {
 public:
};

PlayerInitialData::PlayerInitialData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerInitialData)
}
PlayerInitialData::PlayerInitialData(
    ::google::protobuf::Arena* arena, const PlayerInitialData& from)
    : PlayerInitialData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PlayerInitialData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerInitialData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           0,
           offsetof(Impl_, player_movementspeed_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::player_movementspeed_));
}
PlayerInitialData::~PlayerInitialData() {
  // @@protoc_insertion_point(destructor:PlayerInitialData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerInitialData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PlayerInitialData::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerInitialData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.player_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.player_movementspeed_) -
      reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.player_movementspeed_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerInitialData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> PlayerInitialData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PlayerInitialData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerInitialData, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_id_)}},
    // float position_x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_x_)}},
    // float position_y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_y_)}},
    // float position_z = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_z_)}},
    // uint32 rotation_y = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerInitialData, _impl_.rotation_y_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.rotation_y_)}},
    // uint32 player_movementspeed = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerInitialData, _impl_.player_movementspeed_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_movementspeed_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float position_x = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_y = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_z = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.position_z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 rotation_y = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.rotation_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 player_movementspeed = 6;
    {PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_movementspeed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PlayerInitialData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerInitialData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  // float position_x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_position_x(), target);
  }

  // float position_y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_position_y(), target);
  }

  // float position_z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_position_z(), target);
  }

  // uint32 rotation_y = 5;
  if (this->_internal_rotation_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_rotation_y(), target);
  }

  // uint32 player_movementspeed = 6;
  if (this->_internal_player_movementspeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_player_movementspeed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerInitialData)
  return target;
}

::size_t PlayerInitialData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerInitialData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  // float position_x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    total_size += 5;
  }

  // float position_y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    total_size += 5;
  }

  // float position_z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    total_size += 5;
  }

  // uint32 rotation_y = 5;
  if (this->_internal_rotation_y() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_rotation_y());
  }

  // uint32 player_movementspeed = 6;
  if (this->_internal_player_movementspeed() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_movementspeed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PlayerInitialData::_class_data_ = {
    PlayerInitialData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PlayerInitialData::GetClassData() const {
  return &_class_data_;
}

void PlayerInitialData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PlayerInitialData*>(&to_msg);
  auto& from = static_cast<const PlayerInitialData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerInitialData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = from._internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    _this->_internal_set_position_x(from._internal_position_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = from._internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    _this->_internal_set_position_y(from._internal_position_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = from._internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    _this->_internal_set_position_z(from._internal_position_z());
  }
  if (from._internal_rotation_y() != 0) {
    _this->_internal_set_rotation_y(from._internal_rotation_y());
  }
  if (from._internal_player_movementspeed() != 0) {
    _this->_internal_set_player_movementspeed(from._internal_player_movementspeed());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerInitialData::CopyFrom(const PlayerInitialData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerInitialData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerInitialData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PlayerInitialData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PlayerInitialData::InternalSwap(PlayerInitialData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_movementspeed_)
      + sizeof(PlayerInitialData::_impl_.player_movementspeed_)
      - PROTOBUF_FIELD_OFFSET(PlayerInitialData, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::google::protobuf::Metadata PlayerInitialData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetworkProtocol_2eproto_getter, &descriptor_table_NetworkProtocol_2eproto_once,
      file_level_metadata_NetworkProtocol_2eproto[7]);
}
// ===================================================================

class PlayerPosition::_Internal {
 public:
};

PlayerPosition::PlayerPosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlayerPosition)
}
PlayerPosition::PlayerPosition(
    ::google::protobuf::Arena* arena, const PlayerPosition& from)
    : PlayerPosition(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PlayerPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PlayerPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, player_id_),
           0,
           offsetof(Impl_, rotation_y_) -
               offsetof(Impl_, player_id_) +
               sizeof(Impl_::rotation_y_));
}
PlayerPosition::~PlayerPosition() {
  // @@protoc_insertion_point(destructor:PlayerPosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlayerPosition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PlayerPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerPosition)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.player_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rotation_y_) -
      reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.rotation_y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PlayerPosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> PlayerPosition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PlayerPosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerPosition, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.player_id_)}},
    // float position_x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_x_)}},
    // float position_y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_y_)}},
    // float position_z = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_z_)}},
    // uint32 rotation_y = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlayerPosition, _impl_.rotation_y_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.rotation_y_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float position_x = 2;
    {PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_y = 3;
    {PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_z = 4;
    {PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.position_z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 rotation_y = 5;
    {PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.rotation_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PlayerPosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  // float position_x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_position_x(), target);
  }

  // float position_y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_position_y(), target);
  }

  // float position_z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_position_z(), target);
  }

  // uint32 rotation_y = 5;
  if (this->_internal_rotation_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_rotation_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerPosition)
  return target;
}

::size_t PlayerPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  // float position_x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    total_size += 5;
  }

  // float position_y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    total_size += 5;
  }

  // float position_z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    total_size += 5;
  }

  // uint32 rotation_y = 5;
  if (this->_internal_rotation_y() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_rotation_y());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PlayerPosition::_class_data_ = {
    PlayerPosition::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PlayerPosition::GetClassData() const {
  return &_class_data_;
}

void PlayerPosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PlayerPosition*>(&to_msg);
  auto& from = static_cast<const PlayerPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PlayerPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = from._internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    _this->_internal_set_position_x(from._internal_position_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = from._internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    _this->_internal_set_position_y(from._internal_position_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = from._internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    _this->_internal_set_position_z(from._internal_position_z());
  }
  if (from._internal_rotation_y() != 0) {
    _this->_internal_set_rotation_y(from._internal_rotation_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlayerPosition::CopyFrom(const PlayerPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PlayerPosition::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PlayerPosition::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PlayerPosition::InternalSwap(PlayerPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.rotation_y_)
      + sizeof(PlayerPosition::_impl_.rotation_y_)
      - PROTOBUF_FIELD_OFFSET(PlayerPosition, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::google::protobuf::Metadata PlayerPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetworkProtocol_2eproto_getter, &descriptor_table_NetworkProtocol_2eproto_once,
      file_level_metadata_NetworkProtocol_2eproto[8]);
}
// ===================================================================

class MonsterPosition::_Internal {
 public:
};

MonsterPosition::MonsterPosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonsterPosition)
}
inline PROTOBUF_NDEBUG_INLINE MonsterPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : monster_name_(arena, from.monster_name_),
        _cached_size_{0} {}

MonsterPosition::MonsterPosition(
    ::google::protobuf::Arena* arena,
    const MonsterPosition& from)
    : ::google::protobuf::Message(arena) {
  MonsterPosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, monster_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, monster_id_),
           offsetof(Impl_, rotation_y_) -
               offsetof(Impl_, monster_id_) +
               sizeof(Impl_::rotation_y_));

  // @@protoc_insertion_point(copy_constructor:MonsterPosition)
}
inline PROTOBUF_NDEBUG_INLINE MonsterPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : monster_name_(arena),
        _cached_size_{0} {}

inline void MonsterPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, monster_id_),
           0,
           offsetof(Impl_, rotation_y_) -
               offsetof(Impl_, monster_id_) +
               sizeof(Impl_::rotation_y_));
}
MonsterPosition::~MonsterPosition() {
  // @@protoc_insertion_point(destructor:MonsterPosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MonsterPosition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.monster_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MonsterPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:MonsterPosition)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.monster_name_.ClearToEmpty();
  ::memset(&_impl_.monster_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rotation_y_) -
      reinterpret_cast<char*>(&_impl_.monster_id_)) + sizeof(_impl_.rotation_y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MonsterPosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 36, 2> MonsterPosition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MonsterPosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 monster_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonsterPosition, _impl_.monster_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.monster_id_)}},
    // string monster_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.monster_name_)}},
    // float position_x = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_x_)}},
    // float position_y = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_y_)}},
    // float position_z = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_z_)}},
    // uint32 rotation_y = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MonsterPosition, _impl_.rotation_y_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.rotation_y_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 monster_id = 1;
    {PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.monster_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string monster_name = 2;
    {PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.monster_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float position_x = 3;
    {PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_y = 4;
    {PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float position_z = 5;
    {PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.position_z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 rotation_y = 6;
    {PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.rotation_y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\17\0\14\0\0\0\0\0"
    "MonsterPosition"
    "monster_name"
  }},
};

::uint8_t* MonsterPosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonsterPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 monster_id = 1;
  if (this->_internal_monster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_monster_id(), target);
  }

  // string monster_name = 2;
  if (!this->_internal_monster_name().empty()) {
    const std::string& _s = this->_internal_monster_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonsterPosition.monster_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // float position_x = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_position_x(), target);
  }

  // float position_y = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_position_y(), target);
  }

  // float position_z = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_position_z(), target);
  }

  // uint32 rotation_y = 6;
  if (this->_internal_rotation_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_rotation_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonsterPosition)
  return target;
}

::size_t MonsterPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonsterPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string monster_name = 2;
  if (!this->_internal_monster_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_monster_name());
  }

  // int32 monster_id = 1;
  if (this->_internal_monster_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_monster_id());
  }

  // float position_x = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = this->_internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    total_size += 5;
  }

  // float position_y = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = this->_internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    total_size += 5;
  }

  // float position_z = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = this->_internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    total_size += 5;
  }

  // uint32 rotation_y = 6;
  if (this->_internal_rotation_y() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_rotation_y());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MonsterPosition::_class_data_ = {
    MonsterPosition::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MonsterPosition::GetClassData() const {
  return &_class_data_;
}

void MonsterPosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MonsterPosition*>(&to_msg);
  auto& from = static_cast<const MonsterPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonsterPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_monster_name().empty()) {
    _this->_internal_set_monster_name(from._internal_monster_name());
  }
  if (from._internal_monster_id() != 0) {
    _this->_internal_set_monster_id(from._internal_monster_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_x = from._internal_position_x();
  ::uint32_t raw_position_x;
  memcpy(&raw_position_x, &tmp_position_x, sizeof(tmp_position_x));
  if (raw_position_x != 0) {
    _this->_internal_set_position_x(from._internal_position_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_y = from._internal_position_y();
  ::uint32_t raw_position_y;
  memcpy(&raw_position_y, &tmp_position_y, sizeof(tmp_position_y));
  if (raw_position_y != 0) {
    _this->_internal_set_position_y(from._internal_position_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_position_z = from._internal_position_z();
  ::uint32_t raw_position_z;
  memcpy(&raw_position_z, &tmp_position_z, sizeof(tmp_position_z));
  if (raw_position_z != 0) {
    _this->_internal_set_position_z(from._internal_position_z());
  }
  if (from._internal_rotation_y() != 0) {
    _this->_internal_set_rotation_y(from._internal_rotation_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MonsterPosition::CopyFrom(const MonsterPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonsterPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MonsterPosition::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MonsterPosition::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MonsterPosition::InternalSwap(MonsterPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.monster_name_, &other->_impl_.monster_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.rotation_y_)
      + sizeof(MonsterPosition::_impl_.rotation_y_)
      - PROTOBUF_FIELD_OFFSET(MonsterPosition, _impl_.monster_id_)>(
          reinterpret_cast<char*>(&_impl_.monster_id_),
          reinterpret_cast<char*>(&other->_impl_.monster_id_));
}

::google::protobuf::Metadata MonsterPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_NetworkProtocol_2eproto_getter, &descriptor_table_NetworkProtocol_2eproto_once,
      file_level_metadata_NetworkProtocol_2eproto[9]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

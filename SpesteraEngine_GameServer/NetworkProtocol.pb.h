// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetworkProtocol.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_NetworkProtocol_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_NetworkProtocol_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_NetworkProtocol_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_NetworkProtocol_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_NetworkProtocol_2eproto;
class AnimationClip;
struct AnimationClipDefaultTypeInternal;
extern AnimationClipDefaultTypeInternal _AnimationClip_default_instance_;
class AssignId;
struct AssignIdDefaultTypeInternal;
extern AssignIdDefaultTypeInternal _AssignId_default_instance_;
class ClientLogin;
struct ClientLoginDefaultTypeInternal;
extern ClientLoginDefaultTypeInternal _ClientLogin_default_instance_;
class ClientLogout;
struct ClientLogoutDefaultTypeInternal;
extern ClientLogoutDefaultTypeInternal _ClientLogout_default_instance_;
class Heartbeat;
struct HeartbeatDefaultTypeInternal;
extern HeartbeatDefaultTypeInternal _Heartbeat_default_instance_;
class MonsterInitialData;
struct MonsterInitialDataDefaultTypeInternal;
extern MonsterInitialDataDefaultTypeInternal _MonsterInitialData_default_instance_;
class MonsterPosition;
struct MonsterPositionDefaultTypeInternal;
extern MonsterPositionDefaultTypeInternal _MonsterPosition_default_instance_;
class PlayerInitialData;
struct PlayerInitialDataDefaultTypeInternal;
extern PlayerInitialDataDefaultTypeInternal _PlayerInitialData_default_instance_;
class PlayerPosition;
struct PlayerPositionDefaultTypeInternal;
extern PlayerPositionDefaultTypeInternal _PlayerPosition_default_instance_;
class RequestLogin;
struct RequestLoginDefaultTypeInternal;
extern RequestLoginDefaultTypeInternal _RequestLogin_default_instance_;
class Response;
struct ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class WorldData;
struct WorldDataDefaultTypeInternal;
extern WorldDataDefaultTypeInternal _WorldData_default_instance_;
class Wrapper;
struct WrapperDefaultTypeInternal;
extern WrapperDefaultTypeInternal _Wrapper_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum Wrapper_MessageType : int {
  Wrapper_MessageType_WORLDDATA = 0,
  Wrapper_MessageType_REQUESTLOGIN = 1,
  Wrapper_MessageType_CLIENTLOGOUT = 2,
  Wrapper_MessageType_CLIENTLOGIN = 3,
  Wrapper_MessageType_PLAYERINITIALDATA = 4,
  Wrapper_MessageType_PLAYERPOSITION = 5,
  Wrapper_MessageType_HEARTBEAT = 6,
  Wrapper_MessageType_ASSIGNID = 99,
  Wrapper_MessageType_RESPONSE = 100,
  Wrapper_MessageType_Wrapper_MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Wrapper_MessageType_Wrapper_MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Wrapper_MessageType_IsValid(int value);
extern const uint32_t Wrapper_MessageType_internal_data_[];
constexpr Wrapper_MessageType Wrapper_MessageType_MessageType_MIN = static_cast<Wrapper_MessageType>(0);
constexpr Wrapper_MessageType Wrapper_MessageType_MessageType_MAX = static_cast<Wrapper_MessageType>(100);
constexpr int Wrapper_MessageType_MessageType_ARRAYSIZE = 100 + 1;
const ::google::protobuf::EnumDescriptor*
Wrapper_MessageType_descriptor();
template <typename T>
const std::string& Wrapper_MessageType_Name(T value) {
  static_assert(std::is_same<T, Wrapper_MessageType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MessageType_Name().");
  return ::google::protobuf::internal::NameOfEnum(Wrapper_MessageType_descriptor(), value);
}
inline bool Wrapper_MessageType_Parse(absl::string_view name, Wrapper_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Wrapper_MessageType>(
      Wrapper_MessageType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Wrapper final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Wrapper) */ {
 public:
  inline Wrapper() : Wrapper(nullptr) {}
  ~Wrapper() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Wrapper(::google::protobuf::internal::ConstantInitialized);

  inline Wrapper(const Wrapper& from)
      : Wrapper(nullptr, from) {}
  Wrapper(Wrapper&& from) noexcept
    : Wrapper() {
    *this = ::std::move(from);
  }

  inline Wrapper& operator=(const Wrapper& from) {
    CopyFrom(from);
    return *this;
  }
  inline Wrapper& operator=(Wrapper&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Wrapper& default_instance() {
    return *internal_default_instance();
  }
  static inline const Wrapper* internal_default_instance() {
    return reinterpret_cast<const Wrapper*>(
               &_Wrapper_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Wrapper& a, Wrapper& b) {
    a.Swap(&b);
  }
  inline void Swap(Wrapper* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Wrapper* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Wrapper* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Wrapper>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Wrapper& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Wrapper& from) {
    Wrapper::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Wrapper* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Wrapper";
  }
  protected:
  explicit Wrapper(::google::protobuf::Arena* arena);
  Wrapper(::google::protobuf::Arena* arena, const Wrapper& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using MessageType = Wrapper_MessageType;
  static constexpr MessageType WORLDDATA = Wrapper_MessageType_WORLDDATA;
  static constexpr MessageType REQUESTLOGIN = Wrapper_MessageType_REQUESTLOGIN;
  static constexpr MessageType CLIENTLOGOUT = Wrapper_MessageType_CLIENTLOGOUT;
  static constexpr MessageType CLIENTLOGIN = Wrapper_MessageType_CLIENTLOGIN;
  static constexpr MessageType PLAYERINITIALDATA = Wrapper_MessageType_PLAYERINITIALDATA;
  static constexpr MessageType PLAYERPOSITION = Wrapper_MessageType_PLAYERPOSITION;
  static constexpr MessageType HEARTBEAT = Wrapper_MessageType_HEARTBEAT;
  static constexpr MessageType ASSIGNID = Wrapper_MessageType_ASSIGNID;
  static constexpr MessageType RESPONSE = Wrapper_MessageType_RESPONSE;
  static inline bool MessageType_IsValid(int value) {
    return Wrapper_MessageType_IsValid(value);
  }
  static constexpr MessageType MessageType_MIN = Wrapper_MessageType_MessageType_MIN;
  static constexpr MessageType MessageType_MAX = Wrapper_MessageType_MessageType_MAX;
  static constexpr int MessageType_ARRAYSIZE = Wrapper_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
    return Wrapper_MessageType_descriptor();
  }
  template <typename T>
  static inline const std::string& MessageType_Name(T value) {
    return Wrapper_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(absl::string_view name, MessageType* value) {
    return Wrapper_MessageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // bytes payload = 2;
  void clear_payload() ;
  const std::string& payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  std::string* mutable_payload();
  PROTOBUF_NODISCARD std::string* release_payload();
  void set_allocated_payload(std::string* value);

  private:
  const std::string& _internal_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payload(
      const std::string& value);
  std::string* _internal_mutable_payload();

  public:
  // .Wrapper.MessageType type = 1;
  void clear_type() ;
  ::Wrapper_MessageType type() const;
  void set_type(::Wrapper_MessageType value);

  private:
  ::Wrapper_MessageType _internal_type() const;
  void _internal_set_type(::Wrapper_MessageType value);

  public:
  // @@protoc_insertion_point(class_scope:Wrapper)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr payload_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response) */ {
 public:
  inline Response() : Response(nullptr) {}
  ~Response() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Response(::google::protobuf::internal::ConstantInitialized);

  inline Response(const Response& from)
      : Response(nullptr, from) {}
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline Response& operator=(Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }
  inline void Swap(Response* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Response& from) {
    Response::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Response* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Response";
  }
  protected:
  explicit Response(::google::protobuf::Arena* arena);
  Response(::google::protobuf::Arena* arena, const Response& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // string data = 1;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:Response)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      21, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class RequestLogin final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RequestLogin) */ {
 public:
  inline RequestLogin() : RequestLogin(nullptr) {}
  ~RequestLogin() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RequestLogin(::google::protobuf::internal::ConstantInitialized);

  inline RequestLogin(const RequestLogin& from)
      : RequestLogin(nullptr, from) {}
  RequestLogin(RequestLogin&& from) noexcept
    : RequestLogin() {
    *this = ::std::move(from);
  }

  inline RequestLogin& operator=(const RequestLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestLogin& operator=(RequestLogin&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestLogin& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestLogin* internal_default_instance() {
    return reinterpret_cast<const RequestLogin*>(
               &_RequestLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RequestLogin& a, RequestLogin& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestLogin* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestLogin* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestLogin* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RequestLogin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestLogin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RequestLogin& from) {
    RequestLogin::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestLogin* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "RequestLogin";
  }
  protected:
  explicit RequestLogin(::google::protobuf::Arena* arena);
  RequestLogin(::google::protobuf::Arena* arena, const RequestLogin& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // uint32 player_id = 1;
  void clear_player_id() ;
  ::uint32_t player_id() const;
  void set_player_id(::uint32_t value);

  private:
  ::uint32_t _internal_player_id() const;
  void _internal_set_player_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RequestLogin)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t player_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class PlayerPosition final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerPosition) */ {
 public:
  inline PlayerPosition() : PlayerPosition(nullptr) {}
  ~PlayerPosition() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerPosition(::google::protobuf::internal::ConstantInitialized);

  inline PlayerPosition(const PlayerPosition& from)
      : PlayerPosition(nullptr, from) {}
  PlayerPosition(PlayerPosition&& from) noexcept
    : PlayerPosition() {
    *this = ::std::move(from);
  }

  inline PlayerPosition& operator=(const PlayerPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerPosition& operator=(PlayerPosition&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerPosition& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerPosition* internal_default_instance() {
    return reinterpret_cast<const PlayerPosition*>(
               &_PlayerPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(PlayerPosition& a, PlayerPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerPosition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerPosition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerPosition* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayerPosition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerPosition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayerPosition& from) {
    PlayerPosition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PlayerPosition* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "PlayerPosition";
  }
  protected:
  explicit PlayerPosition(::google::protobuf::Arena* arena);
  PlayerPosition(::google::protobuf::Arena* arena, const PlayerPosition& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kPositionXFieldNumber = 2,
    kPositionYFieldNumber = 3,
    kPositionZFieldNumber = 4,
  };
  // uint32 player_id = 1;
  void clear_player_id() ;
  ::uint32_t player_id() const;
  void set_player_id(::uint32_t value);

  private:
  ::uint32_t _internal_player_id() const;
  void _internal_set_player_id(::uint32_t value);

  public:
  // float position_x = 2;
  void clear_position_x() ;
  float position_x() const;
  void set_position_x(float value);

  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);

  public:
  // float position_y = 3;
  void clear_position_y() ;
  float position_y() const;
  void set_position_y(float value);

  private:
  float _internal_position_y() const;
  void _internal_set_position_y(float value);

  public:
  // float position_z = 4;
  void clear_position_z() ;
  float position_z() const;
  void set_position_z(float value);

  private:
  float _internal_position_z() const;
  void _internal_set_position_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerPosition)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t player_id_;
    float position_x_;
    float position_y_;
    float position_z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class PlayerInitialData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerInitialData) */ {
 public:
  inline PlayerInitialData() : PlayerInitialData(nullptr) {}
  ~PlayerInitialData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerInitialData(::google::protobuf::internal::ConstantInitialized);

  inline PlayerInitialData(const PlayerInitialData& from)
      : PlayerInitialData(nullptr, from) {}
  PlayerInitialData(PlayerInitialData&& from) noexcept
    : PlayerInitialData() {
    *this = ::std::move(from);
  }

  inline PlayerInitialData& operator=(const PlayerInitialData& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerInitialData& operator=(PlayerInitialData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerInitialData& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerInitialData* internal_default_instance() {
    return reinterpret_cast<const PlayerInitialData*>(
               &_PlayerInitialData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(PlayerInitialData& a, PlayerInitialData& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerInitialData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerInitialData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerInitialData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayerInitialData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerInitialData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayerInitialData& from) {
    PlayerInitialData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PlayerInitialData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "PlayerInitialData";
  }
  protected:
  explicit PlayerInitialData(::google::protobuf::Arena* arena);
  PlayerInitialData(::google::protobuf::Arena* arena, const PlayerInitialData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerNameFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
    kPositionXFieldNumber = 3,
    kPositionYFieldNumber = 4,
    kPositionZFieldNumber = 5,
    kPlayerMovementspeedFieldNumber = 7,
  };
  // string player_name = 2;
  void clear_player_name() ;
  const std::string& player_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_player_name(Arg_&& arg, Args_... args);
  std::string* mutable_player_name();
  PROTOBUF_NODISCARD std::string* release_player_name();
  void set_allocated_player_name(std::string* value);

  private:
  const std::string& _internal_player_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_player_name(
      const std::string& value);
  std::string* _internal_mutable_player_name();

  public:
  // uint32 player_id = 1;
  void clear_player_id() ;
  ::uint32_t player_id() const;
  void set_player_id(::uint32_t value);

  private:
  ::uint32_t _internal_player_id() const;
  void _internal_set_player_id(::uint32_t value);

  public:
  // float position_x = 3;
  void clear_position_x() ;
  float position_x() const;
  void set_position_x(float value);

  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);

  public:
  // float position_y = 4;
  void clear_position_y() ;
  float position_y() const;
  void set_position_y(float value);

  private:
  float _internal_position_y() const;
  void _internal_set_position_y(float value);

  public:
  // float position_z = 5;
  void clear_position_z() ;
  float position_z() const;
  void set_position_z(float value);

  private:
  float _internal_position_z() const;
  void _internal_set_position_z(float value);

  public:
  // uint32 player_movementspeed = 7;
  void clear_player_movementspeed() ;
  ::uint32_t player_movementspeed() const;
  void set_player_movementspeed(::uint32_t value);

  private:
  ::uint32_t _internal_player_movementspeed() const;
  void _internal_set_player_movementspeed(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerInitialData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      37, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr player_name_;
    ::uint32_t player_id_;
    float position_x_;
    float position_y_;
    float position_z_;
    ::uint32_t player_movementspeed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class MonsterPosition final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MonsterPosition) */ {
 public:
  inline MonsterPosition() : MonsterPosition(nullptr) {}
  ~MonsterPosition() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MonsterPosition(::google::protobuf::internal::ConstantInitialized);

  inline MonsterPosition(const MonsterPosition& from)
      : MonsterPosition(nullptr, from) {}
  MonsterPosition(MonsterPosition&& from) noexcept
    : MonsterPosition() {
    *this = ::std::move(from);
  }

  inline MonsterPosition& operator=(const MonsterPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonsterPosition& operator=(MonsterPosition&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MonsterPosition& default_instance() {
    return *internal_default_instance();
  }
  static inline const MonsterPosition* internal_default_instance() {
    return reinterpret_cast<const MonsterPosition*>(
               &_MonsterPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MonsterPosition& a, MonsterPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(MonsterPosition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MonsterPosition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MonsterPosition* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MonsterPosition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MonsterPosition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MonsterPosition& from) {
    MonsterPosition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MonsterPosition* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "MonsterPosition";
  }
  protected:
  explicit MonsterPosition(::google::protobuf::Arena* arena);
  MonsterPosition(::google::protobuf::Arena* arena, const MonsterPosition& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMonsterNameFieldNumber = 2,
    kMonsterIdFieldNumber = 1,
    kPositionXFieldNumber = 3,
    kPositionYFieldNumber = 4,
    kPositionZFieldNumber = 5,
  };
  // string monster_name = 2;
  void clear_monster_name() ;
  const std::string& monster_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_monster_name(Arg_&& arg, Args_... args);
  std::string* mutable_monster_name();
  PROTOBUF_NODISCARD std::string* release_monster_name();
  void set_allocated_monster_name(std::string* value);

  private:
  const std::string& _internal_monster_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_monster_name(
      const std::string& value);
  std::string* _internal_mutable_monster_name();

  public:
  // int32 monster_id = 1;
  void clear_monster_id() ;
  ::int32_t monster_id() const;
  void set_monster_id(::int32_t value);

  private:
  ::int32_t _internal_monster_id() const;
  void _internal_set_monster_id(::int32_t value);

  public:
  // float position_x = 3;
  void clear_position_x() ;
  float position_x() const;
  void set_position_x(float value);

  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);

  public:
  // float position_y = 4;
  void clear_position_y() ;
  float position_y() const;
  void set_position_y(float value);

  private:
  float _internal_position_y() const;
  void _internal_set_position_y(float value);

  public:
  // float position_z = 5;
  void clear_position_z() ;
  float position_z() const;
  void set_position_z(float value);

  private:
  float _internal_position_z() const;
  void _internal_set_position_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:MonsterPosition)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      36, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr monster_name_;
    ::int32_t monster_id_;
    float position_x_;
    float position_y_;
    float position_z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class MonsterInitialData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MonsterInitialData) */ {
 public:
  inline MonsterInitialData() : MonsterInitialData(nullptr) {}
  ~MonsterInitialData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MonsterInitialData(::google::protobuf::internal::ConstantInitialized);

  inline MonsterInitialData(const MonsterInitialData& from)
      : MonsterInitialData(nullptr, from) {}
  MonsterInitialData(MonsterInitialData&& from) noexcept
    : MonsterInitialData() {
    *this = ::std::move(from);
  }

  inline MonsterInitialData& operator=(const MonsterInitialData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonsterInitialData& operator=(MonsterInitialData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MonsterInitialData& default_instance() {
    return *internal_default_instance();
  }
  static inline const MonsterInitialData* internal_default_instance() {
    return reinterpret_cast<const MonsterInitialData*>(
               &_MonsterInitialData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MonsterInitialData& a, MonsterInitialData& b) {
    a.Swap(&b);
  }
  inline void Swap(MonsterInitialData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MonsterInitialData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MonsterInitialData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MonsterInitialData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MonsterInitialData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MonsterInitialData& from) {
    MonsterInitialData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MonsterInitialData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "MonsterInitialData";
  }
  protected:
  explicit MonsterInitialData(::google::protobuf::Arena* arena);
  MonsterInitialData(::google::protobuf::Arena* arena, const MonsterInitialData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMonsterNameFieldNumber = 2,
    kMonsterIdFieldNumber = 1,
    kPositionXFieldNumber = 3,
    kPositionYFieldNumber = 4,
    kPositionZFieldNumber = 5,
    kMonsterMovementSpeedFieldNumber = 7,
  };
  // string monster_name = 2;
  void clear_monster_name() ;
  const std::string& monster_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_monster_name(Arg_&& arg, Args_... args);
  std::string* mutable_monster_name();
  PROTOBUF_NODISCARD std::string* release_monster_name();
  void set_allocated_monster_name(std::string* value);

  private:
  const std::string& _internal_monster_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_monster_name(
      const std::string& value);
  std::string* _internal_mutable_monster_name();

  public:
  // int32 monster_id = 1;
  void clear_monster_id() ;
  ::int32_t monster_id() const;
  void set_monster_id(::int32_t value);

  private:
  ::int32_t _internal_monster_id() const;
  void _internal_set_monster_id(::int32_t value);

  public:
  // float position_x = 3;
  void clear_position_x() ;
  float position_x() const;
  void set_position_x(float value);

  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);

  public:
  // float position_y = 4;
  void clear_position_y() ;
  float position_y() const;
  void set_position_y(float value);

  private:
  float _internal_position_y() const;
  void _internal_set_position_y(float value);

  public:
  // float position_z = 5;
  void clear_position_z() ;
  float position_z() const;
  void set_position_z(float value);

  private:
  float _internal_position_z() const;
  void _internal_set_position_z(float value);

  public:
  // uint32 monster_movement_speed = 7;
  void clear_monster_movement_speed() ;
  ::uint32_t monster_movement_speed() const;
  void set_monster_movement_speed(::uint32_t value);

  private:
  ::uint32_t _internal_monster_movement_speed() const;
  void _internal_set_monster_movement_speed(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonsterInitialData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      39, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr monster_name_;
    ::int32_t monster_id_;
    float position_x_;
    float position_y_;
    float position_z_;
    ::uint32_t monster_movement_speed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class ClientLogout final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClientLogout) */ {
 public:
  inline ClientLogout() : ClientLogout(nullptr) {}
  ~ClientLogout() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ClientLogout(::google::protobuf::internal::ConstantInitialized);

  inline ClientLogout(const ClientLogout& from)
      : ClientLogout(nullptr, from) {}
  ClientLogout(ClientLogout&& from) noexcept
    : ClientLogout() {
    *this = ::std::move(from);
  }

  inline ClientLogout& operator=(const ClientLogout& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientLogout& operator=(ClientLogout&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientLogout& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientLogout* internal_default_instance() {
    return reinterpret_cast<const ClientLogout*>(
               &_ClientLogout_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ClientLogout& a, ClientLogout& b) {
    a.Swap(&b);
  }
  inline void Swap(ClientLogout* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientLogout* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientLogout* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ClientLogout>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClientLogout& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ClientLogout& from) {
    ClientLogout::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ClientLogout* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ClientLogout";
  }
  protected:
  explicit ClientLogout(::google::protobuf::Arena* arena);
  ClientLogout(::google::protobuf::Arena* arena, const ClientLogout& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // uint32 player_id = 1;
  void clear_player_id() ;
  ::uint32_t player_id() const;
  void set_player_id(::uint32_t value);

  private:
  ::uint32_t _internal_player_id() const;
  void _internal_set_player_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ClientLogout)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t player_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class AssignId final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AssignId) */ {
 public:
  inline AssignId() : AssignId(nullptr) {}
  ~AssignId() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AssignId(::google::protobuf::internal::ConstantInitialized);

  inline AssignId(const AssignId& from)
      : AssignId(nullptr, from) {}
  AssignId(AssignId&& from) noexcept
    : AssignId() {
    *this = ::std::move(from);
  }

  inline AssignId& operator=(const AssignId& from) {
    CopyFrom(from);
    return *this;
  }
  inline AssignId& operator=(AssignId&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AssignId& default_instance() {
    return *internal_default_instance();
  }
  static inline const AssignId* internal_default_instance() {
    return reinterpret_cast<const AssignId*>(
               &_AssignId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AssignId& a, AssignId& b) {
    a.Swap(&b);
  }
  inline void Swap(AssignId* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AssignId* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AssignId* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AssignId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AssignId& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AssignId& from) {
    AssignId::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AssignId* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "AssignId";
  }
  protected:
  explicit AssignId(::google::protobuf::Arena* arena);
  AssignId(::google::protobuf::Arena* arena, const AssignId& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStringFieldNumber = 1,
  };
  // uint32 string = 1;
  void clear_string() ;
  ::uint32_t string() const;
  void set_string(::uint32_t value);

  private:
  ::uint32_t _internal_string() const;
  void _internal_set_string(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:AssignId)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t string_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class AnimationClip final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:AnimationClip) */ {
 public:
  inline AnimationClip() : AnimationClip(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AnimationClip(::google::protobuf::internal::ConstantInitialized);

  inline AnimationClip(const AnimationClip& from)
      : AnimationClip(nullptr, from) {}
  AnimationClip(AnimationClip&& from) noexcept
    : AnimationClip() {
    *this = ::std::move(from);
  }

  inline AnimationClip& operator=(const AnimationClip& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnimationClip& operator=(AnimationClip&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AnimationClip& default_instance() {
    return *internal_default_instance();
  }
  static inline const AnimationClip* internal_default_instance() {
    return reinterpret_cast<const AnimationClip*>(
               &_AnimationClip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(AnimationClip& a, AnimationClip& b) {
    a.Swap(&b);
  }
  inline void Swap(AnimationClip* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnimationClip* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AnimationClip* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AnimationClip>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AnimationClip& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AnimationClip& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "AnimationClip";
  }
  protected:
  explicit AnimationClip(::google::protobuf::Arena* arena);
  AnimationClip(::google::protobuf::Arena* arena, const AnimationClip& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:AnimationClip)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class WorldData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WorldData) */ {
 public:
  inline WorldData() : WorldData(nullptr) {}
  ~WorldData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WorldData(::google::protobuf::internal::ConstantInitialized);

  inline WorldData(const WorldData& from)
      : WorldData(nullptr, from) {}
  WorldData(WorldData&& from) noexcept
    : WorldData() {
    *this = ::std::move(from);
  }

  inline WorldData& operator=(const WorldData& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorldData& operator=(WorldData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WorldData& default_instance() {
    return *internal_default_instance();
  }
  static inline const WorldData* internal_default_instance() {
    return reinterpret_cast<const WorldData*>(
               &_WorldData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(WorldData& a, WorldData& b) {
    a.Swap(&b);
  }
  inline void Swap(WorldData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WorldData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WorldData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WorldData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WorldData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WorldData& from) {
    WorldData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WorldData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "WorldData";
  }
  protected:
  explicit WorldData(::google::protobuf::Arena* arena);
  WorldData(::google::protobuf::Arena* arena, const WorldData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayersFieldNumber = 1,
    kMonstersFieldNumber = 2,
  };
  // repeated .PlayerInitialData players = 1;
  int players_size() const;
  private:
  int _internal_players_size() const;

  public:
  void clear_players() ;
  ::PlayerInitialData* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::PlayerInitialData >*
      mutable_players();
  private:
  const ::google::protobuf::RepeatedPtrField<::PlayerInitialData>& _internal_players() const;
  ::google::protobuf::RepeatedPtrField<::PlayerInitialData>* _internal_mutable_players();
  public:
  const ::PlayerInitialData& players(int index) const;
  ::PlayerInitialData* add_players();
  const ::google::protobuf::RepeatedPtrField< ::PlayerInitialData >&
      players() const;
  // repeated .MonsterInitialData monsters = 2;
  int monsters_size() const;
  private:
  int _internal_monsters_size() const;

  public:
  void clear_monsters() ;
  ::MonsterInitialData* mutable_monsters(int index);
  ::google::protobuf::RepeatedPtrField< ::MonsterInitialData >*
      mutable_monsters();
  private:
  const ::google::protobuf::RepeatedPtrField<::MonsterInitialData>& _internal_monsters() const;
  ::google::protobuf::RepeatedPtrField<::MonsterInitialData>* _internal_mutable_monsters();
  public:
  const ::MonsterInitialData& monsters(int index) const;
  ::MonsterInitialData* add_monsters();
  const ::google::protobuf::RepeatedPtrField< ::MonsterInitialData >&
      monsters() const;
  // @@protoc_insertion_point(class_scope:WorldData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::PlayerInitialData > players_;
    ::google::protobuf::RepeatedPtrField< ::MonsterInitialData > monsters_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class Heartbeat final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Heartbeat) */ {
 public:
  inline Heartbeat() : Heartbeat(nullptr) {}
  ~Heartbeat() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Heartbeat(::google::protobuf::internal::ConstantInitialized);

  inline Heartbeat(const Heartbeat& from)
      : Heartbeat(nullptr, from) {}
  Heartbeat(Heartbeat&& from) noexcept
    : Heartbeat() {
    *this = ::std::move(from);
  }

  inline Heartbeat& operator=(const Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }
  inline Heartbeat& operator=(Heartbeat&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Heartbeat& default_instance() {
    return *internal_default_instance();
  }
  static inline const Heartbeat* internal_default_instance() {
    return reinterpret_cast<const Heartbeat*>(
               &_Heartbeat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Heartbeat& a, Heartbeat& b) {
    a.Swap(&b);
  }
  inline void Swap(Heartbeat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Heartbeat* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Heartbeat* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Heartbeat>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Heartbeat& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Heartbeat& from) {
    Heartbeat::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Heartbeat* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Heartbeat";
  }
  protected:
  explicit Heartbeat(::google::protobuf::Arena* arena);
  Heartbeat(::google::protobuf::Arena* arena, const Heartbeat& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayersFieldNumber = 1,
    kMonstersFieldNumber = 2,
  };
  // repeated .PlayerPosition players = 1;
  int players_size() const;
  private:
  int _internal_players_size() const;

  public:
  void clear_players() ;
  ::PlayerPosition* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::PlayerPosition >*
      mutable_players();
  private:
  const ::google::protobuf::RepeatedPtrField<::PlayerPosition>& _internal_players() const;
  ::google::protobuf::RepeatedPtrField<::PlayerPosition>* _internal_mutable_players();
  public:
  const ::PlayerPosition& players(int index) const;
  ::PlayerPosition* add_players();
  const ::google::protobuf::RepeatedPtrField< ::PlayerPosition >&
      players() const;
  // repeated .MonsterPosition monsters = 2;
  int monsters_size() const;
  private:
  int _internal_monsters_size() const;

  public:
  void clear_monsters() ;
  ::MonsterPosition* mutable_monsters(int index);
  ::google::protobuf::RepeatedPtrField< ::MonsterPosition >*
      mutable_monsters();
  private:
  const ::google::protobuf::RepeatedPtrField<::MonsterPosition>& _internal_monsters() const;
  ::google::protobuf::RepeatedPtrField<::MonsterPosition>* _internal_mutable_monsters();
  public:
  const ::MonsterPosition& monsters(int index) const;
  ::MonsterPosition* add_monsters();
  const ::google::protobuf::RepeatedPtrField< ::MonsterPosition >&
      monsters() const;
  // @@protoc_insertion_point(class_scope:Heartbeat)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::PlayerPosition > players_;
    ::google::protobuf::RepeatedPtrField< ::MonsterPosition > monsters_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};// -------------------------------------------------------------------

class ClientLogin final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClientLogin) */ {
 public:
  inline ClientLogin() : ClientLogin(nullptr) {}
  ~ClientLogin() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ClientLogin(::google::protobuf::internal::ConstantInitialized);

  inline ClientLogin(const ClientLogin& from)
      : ClientLogin(nullptr, from) {}
  ClientLogin(ClientLogin&& from) noexcept
    : ClientLogin() {
    *this = ::std::move(from);
  }

  inline ClientLogin& operator=(const ClientLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientLogin& operator=(ClientLogin&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientLogin& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientLogin* internal_default_instance() {
    return reinterpret_cast<const ClientLogin*>(
               &_ClientLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ClientLogin& a, ClientLogin& b) {
    a.Swap(&b);
  }
  inline void Swap(ClientLogin* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientLogin* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientLogin* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ClientLogin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClientLogin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ClientLogin& from) {
    ClientLogin::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ClientLogin* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ClientLogin";
  }
  protected:
  explicit ClientLogin(::google::protobuf::Arena* arena);
  ClientLogin(::google::protobuf::Arena* arena, const ClientLogin& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerDataFieldNumber = 1,
  };
  // .PlayerInitialData player_data = 1;
  bool has_player_data() const;
  void clear_player_data() ;
  const ::PlayerInitialData& player_data() const;
  PROTOBUF_NODISCARD ::PlayerInitialData* release_player_data();
  ::PlayerInitialData* mutable_player_data();
  void set_allocated_player_data(::PlayerInitialData* value);
  void unsafe_arena_set_allocated_player_data(::PlayerInitialData* value);
  ::PlayerInitialData* unsafe_arena_release_player_data();

  private:
  const ::PlayerInitialData& _internal_player_data() const;
  ::PlayerInitialData* _internal_mutable_player_data();

  public:
  // @@protoc_insertion_point(class_scope:ClientLogin)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::PlayerInitialData* player_data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_NetworkProtocol_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Heartbeat

// repeated .PlayerPosition players = 1;
inline int Heartbeat::_internal_players_size() const {
  return _internal_players().size();
}
inline int Heartbeat::players_size() const {
  return _internal_players_size();
}
inline void Heartbeat::clear_players() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.players_.Clear();
}
inline ::PlayerPosition* Heartbeat::mutable_players(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Heartbeat.players)
  return _internal_mutable_players()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::PlayerPosition>* Heartbeat::mutable_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Heartbeat.players)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_players();
}
inline const ::PlayerPosition& Heartbeat::players(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Heartbeat.players)
  return _internal_players().Get(index);
}
inline ::PlayerPosition* Heartbeat::add_players() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::PlayerPosition* _add = _internal_mutable_players()->Add();
  // @@protoc_insertion_point(field_add:Heartbeat.players)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::PlayerPosition>& Heartbeat::players() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Heartbeat.players)
  return _internal_players();
}
inline const ::google::protobuf::RepeatedPtrField<::PlayerPosition>&
Heartbeat::_internal_players() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.players_;
}
inline ::google::protobuf::RepeatedPtrField<::PlayerPosition>*
Heartbeat::_internal_mutable_players() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.players_;
}

// repeated .MonsterPosition monsters = 2;
inline int Heartbeat::_internal_monsters_size() const {
  return _internal_monsters().size();
}
inline int Heartbeat::monsters_size() const {
  return _internal_monsters_size();
}
inline void Heartbeat::clear_monsters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.monsters_.Clear();
}
inline ::MonsterPosition* Heartbeat::mutable_monsters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Heartbeat.monsters)
  return _internal_mutable_monsters()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MonsterPosition>* Heartbeat::mutable_monsters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Heartbeat.monsters)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_monsters();
}
inline const ::MonsterPosition& Heartbeat::monsters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Heartbeat.monsters)
  return _internal_monsters().Get(index);
}
inline ::MonsterPosition* Heartbeat::add_monsters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::MonsterPosition* _add = _internal_mutable_monsters()->Add();
  // @@protoc_insertion_point(field_add:Heartbeat.monsters)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MonsterPosition>& Heartbeat::monsters() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Heartbeat.monsters)
  return _internal_monsters();
}
inline const ::google::protobuf::RepeatedPtrField<::MonsterPosition>&
Heartbeat::_internal_monsters() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.monsters_;
}
inline ::google::protobuf::RepeatedPtrField<::MonsterPosition>*
Heartbeat::_internal_mutable_monsters() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.monsters_;
}

// -------------------------------------------------------------------

// WorldData

// repeated .PlayerInitialData players = 1;
inline int WorldData::_internal_players_size() const {
  return _internal_players().size();
}
inline int WorldData::players_size() const {
  return _internal_players_size();
}
inline void WorldData::clear_players() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.players_.Clear();
}
inline ::PlayerInitialData* WorldData::mutable_players(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:WorldData.players)
  return _internal_mutable_players()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::PlayerInitialData>* WorldData::mutable_players()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:WorldData.players)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_players();
}
inline const ::PlayerInitialData& WorldData::players(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:WorldData.players)
  return _internal_players().Get(index);
}
inline ::PlayerInitialData* WorldData::add_players() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::PlayerInitialData* _add = _internal_mutable_players()->Add();
  // @@protoc_insertion_point(field_add:WorldData.players)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::PlayerInitialData>& WorldData::players() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:WorldData.players)
  return _internal_players();
}
inline const ::google::protobuf::RepeatedPtrField<::PlayerInitialData>&
WorldData::_internal_players() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.players_;
}
inline ::google::protobuf::RepeatedPtrField<::PlayerInitialData>*
WorldData::_internal_mutable_players() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.players_;
}

// repeated .MonsterInitialData monsters = 2;
inline int WorldData::_internal_monsters_size() const {
  return _internal_monsters().size();
}
inline int WorldData::monsters_size() const {
  return _internal_monsters_size();
}
inline void WorldData::clear_monsters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.monsters_.Clear();
}
inline ::MonsterInitialData* WorldData::mutable_monsters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:WorldData.monsters)
  return _internal_mutable_monsters()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MonsterInitialData>* WorldData::mutable_monsters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:WorldData.monsters)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_monsters();
}
inline const ::MonsterInitialData& WorldData::monsters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:WorldData.monsters)
  return _internal_monsters().Get(index);
}
inline ::MonsterInitialData* WorldData::add_monsters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::MonsterInitialData* _add = _internal_mutable_monsters()->Add();
  // @@protoc_insertion_point(field_add:WorldData.monsters)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MonsterInitialData>& WorldData::monsters() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:WorldData.monsters)
  return _internal_monsters();
}
inline const ::google::protobuf::RepeatedPtrField<::MonsterInitialData>&
WorldData::_internal_monsters() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.monsters_;
}
inline ::google::protobuf::RepeatedPtrField<::MonsterInitialData>*
WorldData::_internal_mutable_monsters() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.monsters_;
}

// -------------------------------------------------------------------

// RequestLogin

// uint32 player_id = 1;
inline void RequestLogin::clear_player_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_id_ = 0u;
}
inline ::uint32_t RequestLogin::player_id() const {
  // @@protoc_insertion_point(field_get:RequestLogin.player_id)
  return _internal_player_id();
}
inline void RequestLogin::set_player_id(::uint32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:RequestLogin.player_id)
}
inline ::uint32_t RequestLogin::_internal_player_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.player_id_;
}
inline void RequestLogin::_internal_set_player_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// Response

// string data = 1;
inline void Response::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& Response::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Response.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Response::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Response.data)
}
inline std::string* Response::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:Response.data)
  return _s;
}
inline const std::string& Response::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void Response::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* Response::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* Response::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Response.data)
  return _impl_.data_.Release();
}
inline void Response::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Response.data)
}

// -------------------------------------------------------------------

// ClientLogout

// uint32 player_id = 1;
inline void ClientLogout::clear_player_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_id_ = 0u;
}
inline ::uint32_t ClientLogout::player_id() const {
  // @@protoc_insertion_point(field_get:ClientLogout.player_id)
  return _internal_player_id();
}
inline void ClientLogout::set_player_id(::uint32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:ClientLogout.player_id)
}
inline ::uint32_t ClientLogout::_internal_player_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.player_id_;
}
inline void ClientLogout::_internal_set_player_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_id_ = value;
}

// -------------------------------------------------------------------

// ClientLogin

// .PlayerInitialData player_data = 1;
inline bool ClientLogin::has_player_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_data_ != nullptr);
  return value;
}
inline void ClientLogin::clear_player_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.player_data_ != nullptr) _impl_.player_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::PlayerInitialData& ClientLogin::_internal_player_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::PlayerInitialData* p = _impl_.player_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::PlayerInitialData&>(::_PlayerInitialData_default_instance_);
}
inline const ::PlayerInitialData& ClientLogin::player_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ClientLogin.player_data)
  return _internal_player_data();
}
inline void ClientLogin::unsafe_arena_set_allocated_player_data(::PlayerInitialData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.player_data_);
  }
  _impl_.player_data_ = reinterpret_cast<::PlayerInitialData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ClientLogin.player_data)
}
inline ::PlayerInitialData* ClientLogin::release_player_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PlayerInitialData* released = _impl_.player_data_;
  _impl_.player_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::PlayerInitialData* ClientLogin::unsafe_arena_release_player_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ClientLogin.player_data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PlayerInitialData* temp = _impl_.player_data_;
  _impl_.player_data_ = nullptr;
  return temp;
}
inline ::PlayerInitialData* ClientLogin::_internal_mutable_player_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.player_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::PlayerInitialData>(GetArena());
    _impl_.player_data_ = reinterpret_cast<::PlayerInitialData*>(p);
  }
  return _impl_.player_data_;
}
inline ::PlayerInitialData* ClientLogin::mutable_player_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PlayerInitialData* _msg = _internal_mutable_player_data();
  // @@protoc_insertion_point(field_mutable:ClientLogin.player_data)
  return _msg;
}
inline void ClientLogin::set_allocated_player_data(::PlayerInitialData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::PlayerInitialData*>(_impl_.player_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::PlayerInitialData*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.player_data_ = reinterpret_cast<::PlayerInitialData*>(value);
  // @@protoc_insertion_point(field_set_allocated:ClientLogin.player_data)
}

// -------------------------------------------------------------------

// Wrapper

// .Wrapper.MessageType type = 1;
inline void Wrapper::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0;
}
inline ::Wrapper_MessageType Wrapper::type() const {
  // @@protoc_insertion_point(field_get:Wrapper.type)
  return _internal_type();
}
inline void Wrapper::set_type(::Wrapper_MessageType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Wrapper.type)
}
inline ::Wrapper_MessageType Wrapper::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Wrapper_MessageType>(_impl_.type_);
}
inline void Wrapper::_internal_set_type(::Wrapper_MessageType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// bytes payload = 2;
inline void Wrapper::clear_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.ClearToEmpty();
}
inline const std::string& Wrapper::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Wrapper.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Wrapper::set_payload(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Wrapper.payload)
}
inline std::string* Wrapper::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:Wrapper.payload)
  return _s;
}
inline const std::string& Wrapper::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.payload_.Get();
}
inline void Wrapper::_internal_set_payload(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.Set(value, GetArena());
}
inline std::string* Wrapper::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.payload_.Mutable( GetArena());
}
inline std::string* Wrapper::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Wrapper.payload)
  return _impl_.payload_.Release();
}
inline void Wrapper::set_allocated_payload(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payload_.IsDefault()) {
          _impl_.payload_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Wrapper.payload)
}

// -------------------------------------------------------------------

// AssignId

// uint32 string = 1;
inline void AssignId::clear_string() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.string_ = 0u;
}
inline ::uint32_t AssignId::string() const {
  // @@protoc_insertion_point(field_get:AssignId.string)
  return _internal_string();
}
inline void AssignId::set_string(::uint32_t value) {
  _internal_set_string(value);
  // @@protoc_insertion_point(field_set:AssignId.string)
}
inline ::uint32_t AssignId::_internal_string() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.string_;
}
inline void AssignId::_internal_set_string(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.string_ = value;
}

// -------------------------------------------------------------------

// PlayerInitialData

// uint32 player_id = 1;
inline void PlayerInitialData::clear_player_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_id_ = 0u;
}
inline ::uint32_t PlayerInitialData::player_id() const {
  // @@protoc_insertion_point(field_get:PlayerInitialData.player_id)
  return _internal_player_id();
}
inline void PlayerInitialData::set_player_id(::uint32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:PlayerInitialData.player_id)
}
inline ::uint32_t PlayerInitialData::_internal_player_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.player_id_;
}
inline void PlayerInitialData::_internal_set_player_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_id_ = value;
}

// string player_name = 2;
inline void PlayerInitialData::clear_player_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_name_.ClearToEmpty();
}
inline const std::string& PlayerInitialData::player_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PlayerInitialData.player_name)
  return _internal_player_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayerInitialData::set_player_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PlayerInitialData.player_name)
}
inline std::string* PlayerInitialData::mutable_player_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_player_name();
  // @@protoc_insertion_point(field_mutable:PlayerInitialData.player_name)
  return _s;
}
inline const std::string& PlayerInitialData::_internal_player_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.player_name_.Get();
}
inline void PlayerInitialData::_internal_set_player_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_name_.Set(value, GetArena());
}
inline std::string* PlayerInitialData::_internal_mutable_player_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.player_name_.Mutable( GetArena());
}
inline std::string* PlayerInitialData::release_player_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:PlayerInitialData.player_name)
  return _impl_.player_name_.Release();
}
inline void PlayerInitialData::set_allocated_player_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.player_name_.IsDefault()) {
          _impl_.player_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PlayerInitialData.player_name)
}

// float position_x = 3;
inline void PlayerInitialData::clear_position_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_x_ = 0;
}
inline float PlayerInitialData::position_x() const {
  // @@protoc_insertion_point(field_get:PlayerInitialData.position_x)
  return _internal_position_x();
}
inline void PlayerInitialData::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:PlayerInitialData.position_x)
}
inline float PlayerInitialData::_internal_position_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_x_;
}
inline void PlayerInitialData::_internal_set_position_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_x_ = value;
}

// float position_y = 4;
inline void PlayerInitialData::clear_position_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_y_ = 0;
}
inline float PlayerInitialData::position_y() const {
  // @@protoc_insertion_point(field_get:PlayerInitialData.position_y)
  return _internal_position_y();
}
inline void PlayerInitialData::set_position_y(float value) {
  _internal_set_position_y(value);
  // @@protoc_insertion_point(field_set:PlayerInitialData.position_y)
}
inline float PlayerInitialData::_internal_position_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_y_;
}
inline void PlayerInitialData::_internal_set_position_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_y_ = value;
}

// float position_z = 5;
inline void PlayerInitialData::clear_position_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_z_ = 0;
}
inline float PlayerInitialData::position_z() const {
  // @@protoc_insertion_point(field_get:PlayerInitialData.position_z)
  return _internal_position_z();
}
inline void PlayerInitialData::set_position_z(float value) {
  _internal_set_position_z(value);
  // @@protoc_insertion_point(field_set:PlayerInitialData.position_z)
}
inline float PlayerInitialData::_internal_position_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_z_;
}
inline void PlayerInitialData::_internal_set_position_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_z_ = value;
}

// uint32 player_movementspeed = 7;
inline void PlayerInitialData::clear_player_movementspeed() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_movementspeed_ = 0u;
}
inline ::uint32_t PlayerInitialData::player_movementspeed() const {
  // @@protoc_insertion_point(field_get:PlayerInitialData.player_movementspeed)
  return _internal_player_movementspeed();
}
inline void PlayerInitialData::set_player_movementspeed(::uint32_t value) {
  _internal_set_player_movementspeed(value);
  // @@protoc_insertion_point(field_set:PlayerInitialData.player_movementspeed)
}
inline ::uint32_t PlayerInitialData::_internal_player_movementspeed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.player_movementspeed_;
}
inline void PlayerInitialData::_internal_set_player_movementspeed(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_movementspeed_ = value;
}

// -------------------------------------------------------------------

// PlayerPosition

// uint32 player_id = 1;
inline void PlayerPosition::clear_player_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_id_ = 0u;
}
inline ::uint32_t PlayerPosition::player_id() const {
  // @@protoc_insertion_point(field_get:PlayerPosition.player_id)
  return _internal_player_id();
}
inline void PlayerPosition::set_player_id(::uint32_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:PlayerPosition.player_id)
}
inline ::uint32_t PlayerPosition::_internal_player_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.player_id_;
}
inline void PlayerPosition::_internal_set_player_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_id_ = value;
}

// float position_x = 2;
inline void PlayerPosition::clear_position_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_x_ = 0;
}
inline float PlayerPosition::position_x() const {
  // @@protoc_insertion_point(field_get:PlayerPosition.position_x)
  return _internal_position_x();
}
inline void PlayerPosition::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:PlayerPosition.position_x)
}
inline float PlayerPosition::_internal_position_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_x_;
}
inline void PlayerPosition::_internal_set_position_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_x_ = value;
}

// float position_y = 3;
inline void PlayerPosition::clear_position_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_y_ = 0;
}
inline float PlayerPosition::position_y() const {
  // @@protoc_insertion_point(field_get:PlayerPosition.position_y)
  return _internal_position_y();
}
inline void PlayerPosition::set_position_y(float value) {
  _internal_set_position_y(value);
  // @@protoc_insertion_point(field_set:PlayerPosition.position_y)
}
inline float PlayerPosition::_internal_position_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_y_;
}
inline void PlayerPosition::_internal_set_position_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_y_ = value;
}

// float position_z = 4;
inline void PlayerPosition::clear_position_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_z_ = 0;
}
inline float PlayerPosition::position_z() const {
  // @@protoc_insertion_point(field_get:PlayerPosition.position_z)
  return _internal_position_z();
}
inline void PlayerPosition::set_position_z(float value) {
  _internal_set_position_z(value);
  // @@protoc_insertion_point(field_set:PlayerPosition.position_z)
}
inline float PlayerPosition::_internal_position_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_z_;
}
inline void PlayerPosition::_internal_set_position_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_z_ = value;
}

// -------------------------------------------------------------------

// MonsterInitialData

// int32 monster_id = 1;
inline void MonsterInitialData::clear_monster_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.monster_id_ = 0;
}
inline ::int32_t MonsterInitialData::monster_id() const {
  // @@protoc_insertion_point(field_get:MonsterInitialData.monster_id)
  return _internal_monster_id();
}
inline void MonsterInitialData::set_monster_id(::int32_t value) {
  _internal_set_monster_id(value);
  // @@protoc_insertion_point(field_set:MonsterInitialData.monster_id)
}
inline ::int32_t MonsterInitialData::_internal_monster_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.monster_id_;
}
inline void MonsterInitialData::_internal_set_monster_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.monster_id_ = value;
}

// string monster_name = 2;
inline void MonsterInitialData::clear_monster_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.monster_name_.ClearToEmpty();
}
inline const std::string& MonsterInitialData::monster_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonsterInitialData.monster_name)
  return _internal_monster_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonsterInitialData::set_monster_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.monster_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonsterInitialData.monster_name)
}
inline std::string* MonsterInitialData::mutable_monster_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_monster_name();
  // @@protoc_insertion_point(field_mutable:MonsterInitialData.monster_name)
  return _s;
}
inline const std::string& MonsterInitialData::_internal_monster_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.monster_name_.Get();
}
inline void MonsterInitialData::_internal_set_monster_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.monster_name_.Set(value, GetArena());
}
inline std::string* MonsterInitialData::_internal_mutable_monster_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.monster_name_.Mutable( GetArena());
}
inline std::string* MonsterInitialData::release_monster_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:MonsterInitialData.monster_name)
  return _impl_.monster_name_.Release();
}
inline void MonsterInitialData::set_allocated_monster_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.monster_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.monster_name_.IsDefault()) {
          _impl_.monster_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonsterInitialData.monster_name)
}

// float position_x = 3;
inline void MonsterInitialData::clear_position_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_x_ = 0;
}
inline float MonsterInitialData::position_x() const {
  // @@protoc_insertion_point(field_get:MonsterInitialData.position_x)
  return _internal_position_x();
}
inline void MonsterInitialData::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:MonsterInitialData.position_x)
}
inline float MonsterInitialData::_internal_position_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_x_;
}
inline void MonsterInitialData::_internal_set_position_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_x_ = value;
}

// float position_y = 4;
inline void MonsterInitialData::clear_position_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_y_ = 0;
}
inline float MonsterInitialData::position_y() const {
  // @@protoc_insertion_point(field_get:MonsterInitialData.position_y)
  return _internal_position_y();
}
inline void MonsterInitialData::set_position_y(float value) {
  _internal_set_position_y(value);
  // @@protoc_insertion_point(field_set:MonsterInitialData.position_y)
}
inline float MonsterInitialData::_internal_position_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_y_;
}
inline void MonsterInitialData::_internal_set_position_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_y_ = value;
}

// float position_z = 5;
inline void MonsterInitialData::clear_position_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_z_ = 0;
}
inline float MonsterInitialData::position_z() const {
  // @@protoc_insertion_point(field_get:MonsterInitialData.position_z)
  return _internal_position_z();
}
inline void MonsterInitialData::set_position_z(float value) {
  _internal_set_position_z(value);
  // @@protoc_insertion_point(field_set:MonsterInitialData.position_z)
}
inline float MonsterInitialData::_internal_position_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_z_;
}
inline void MonsterInitialData::_internal_set_position_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_z_ = value;
}

// uint32 monster_movement_speed = 7;
inline void MonsterInitialData::clear_monster_movement_speed() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.monster_movement_speed_ = 0u;
}
inline ::uint32_t MonsterInitialData::monster_movement_speed() const {
  // @@protoc_insertion_point(field_get:MonsterInitialData.monster_movement_speed)
  return _internal_monster_movement_speed();
}
inline void MonsterInitialData::set_monster_movement_speed(::uint32_t value) {
  _internal_set_monster_movement_speed(value);
  // @@protoc_insertion_point(field_set:MonsterInitialData.monster_movement_speed)
}
inline ::uint32_t MonsterInitialData::_internal_monster_movement_speed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.monster_movement_speed_;
}
inline void MonsterInitialData::_internal_set_monster_movement_speed(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.monster_movement_speed_ = value;
}

// -------------------------------------------------------------------

// MonsterPosition

// int32 monster_id = 1;
inline void MonsterPosition::clear_monster_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.monster_id_ = 0;
}
inline ::int32_t MonsterPosition::monster_id() const {
  // @@protoc_insertion_point(field_get:MonsterPosition.monster_id)
  return _internal_monster_id();
}
inline void MonsterPosition::set_monster_id(::int32_t value) {
  _internal_set_monster_id(value);
  // @@protoc_insertion_point(field_set:MonsterPosition.monster_id)
}
inline ::int32_t MonsterPosition::_internal_monster_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.monster_id_;
}
inline void MonsterPosition::_internal_set_monster_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.monster_id_ = value;
}

// string monster_name = 2;
inline void MonsterPosition::clear_monster_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.monster_name_.ClearToEmpty();
}
inline const std::string& MonsterPosition::monster_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonsterPosition.monster_name)
  return _internal_monster_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MonsterPosition::set_monster_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.monster_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonsterPosition.monster_name)
}
inline std::string* MonsterPosition::mutable_monster_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_monster_name();
  // @@protoc_insertion_point(field_mutable:MonsterPosition.monster_name)
  return _s;
}
inline const std::string& MonsterPosition::_internal_monster_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.monster_name_.Get();
}
inline void MonsterPosition::_internal_set_monster_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.monster_name_.Set(value, GetArena());
}
inline std::string* MonsterPosition::_internal_mutable_monster_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.monster_name_.Mutable( GetArena());
}
inline std::string* MonsterPosition::release_monster_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:MonsterPosition.monster_name)
  return _impl_.monster_name_.Release();
}
inline void MonsterPosition::set_allocated_monster_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.monster_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.monster_name_.IsDefault()) {
          _impl_.monster_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonsterPosition.monster_name)
}

// float position_x = 3;
inline void MonsterPosition::clear_position_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_x_ = 0;
}
inline float MonsterPosition::position_x() const {
  // @@protoc_insertion_point(field_get:MonsterPosition.position_x)
  return _internal_position_x();
}
inline void MonsterPosition::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:MonsterPosition.position_x)
}
inline float MonsterPosition::_internal_position_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_x_;
}
inline void MonsterPosition::_internal_set_position_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_x_ = value;
}

// float position_y = 4;
inline void MonsterPosition::clear_position_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_y_ = 0;
}
inline float MonsterPosition::position_y() const {
  // @@protoc_insertion_point(field_get:MonsterPosition.position_y)
  return _internal_position_y();
}
inline void MonsterPosition::set_position_y(float value) {
  _internal_set_position_y(value);
  // @@protoc_insertion_point(field_set:MonsterPosition.position_y)
}
inline float MonsterPosition::_internal_position_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_y_;
}
inline void MonsterPosition::_internal_set_position_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_y_ = value;
}

// float position_z = 5;
inline void MonsterPosition::clear_position_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_z_ = 0;
}
inline float MonsterPosition::position_z() const {
  // @@protoc_insertion_point(field_get:MonsterPosition.position_z)
  return _internal_position_z();
}
inline void MonsterPosition::set_position_z(float value) {
  _internal_set_position_z(value);
  // @@protoc_insertion_point(field_set:MonsterPosition.position_z)
}
inline float MonsterPosition::_internal_position_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_z_;
}
inline void MonsterPosition::_internal_set_position_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_z_ = value;
}

// -------------------------------------------------------------------

// AnimationClip

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Wrapper_MessageType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Wrapper_MessageType>() {
  return ::Wrapper_MessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_NetworkProtocol_2eproto_2epb_2eh

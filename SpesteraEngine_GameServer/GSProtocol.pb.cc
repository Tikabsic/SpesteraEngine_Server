// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GSProtocol.proto

#include "GSProtocol.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr GSWrapperRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : request_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GSWrapperRequest::GSWrapperRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GSWrapperRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GSWrapperRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GSWrapperRequestDefaultTypeInternal() {}
  union {
    GSWrapperRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GSWrapperRequestDefaultTypeInternal _GSWrapperRequest_default_instance_;

inline constexpr GSWrapperResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : response_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GSWrapperResponse::GSWrapperResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GSWrapperResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GSWrapperResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GSWrapperResponseDefaultTypeInternal() {}
  union {
    GSWrapperResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GSWrapperResponseDefaultTypeInternal _GSWrapperResponse_default_instance_;
static ::_pb::Metadata file_level_metadata_GSProtocol_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_GSProtocol_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_GSProtocol_2eproto = nullptr;
const ::uint32_t TableStruct_GSProtocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::GSWrapperRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::GSWrapperRequest, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::GSWrapperRequest, _impl_.request_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::GSWrapperResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::GSWrapperResponse, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::GSWrapperResponse, _impl_.response_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::GSWrapperRequest)},
        {10, -1, -1, sizeof(::GSWrapperResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_GSWrapperRequest_default_instance_._instance,
    &::_GSWrapperResponse_default_instance_._instance,
};
const char descriptor_table_protodef_GSProtocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\020GSProtocol.proto\032\020Connection.proto\"V\n\020"
    "GSWrapperRequest\0227\n\022connection_request\030\001"
    " \001(\0132\031.ConnectionRequestWrapperH\000B\t\n\007req"
    "uest\"Z\n\021GSWrapperResponse\0229\n\023connection_"
    "response\030\001 \001(\0132\032.ConnectionResponseWrapp"
    "erH\000B\n\n\010responseb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_GSProtocol_2eproto_deps[1] =
    {
        &::descriptor_table_Connection_2eproto,
};
static ::absl::once_flag descriptor_table_GSProtocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_GSProtocol_2eproto = {
    false,
    false,
    224,
    descriptor_table_protodef_GSProtocol_2eproto,
    "GSProtocol.proto",
    &descriptor_table_GSProtocol_2eproto_once,
    descriptor_table_GSProtocol_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_GSProtocol_2eproto::offsets,
    file_level_metadata_GSProtocol_2eproto,
    file_level_enum_descriptors_GSProtocol_2eproto,
    file_level_service_descriptors_GSProtocol_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_GSProtocol_2eproto_getter() {
  return &descriptor_table_GSProtocol_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_GSProtocol_2eproto(&descriptor_table_GSProtocol_2eproto);
// ===================================================================

class GSWrapperRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::GSWrapperRequest, _impl_._oneof_case_);
  static const ::ConnectionRequestWrapper& connection_request(const GSWrapperRequest* msg);
};

const ::ConnectionRequestWrapper& GSWrapperRequest::_Internal::connection_request(const GSWrapperRequest* msg) {
  return *msg->_impl_.request_.connection_request_;
}
void GSWrapperRequest::set_allocated_connection_request(::ConnectionRequestWrapper* connection_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request();
  if (connection_request) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(connection_request)->GetArena();
    if (message_arena != submessage_arena) {
      connection_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, connection_request, submessage_arena);
    }
    set_has_connection_request();
    _impl_.request_.connection_request_ = connection_request;
  }
  // @@protoc_insertion_point(field_set_allocated:GSWrapperRequest.connection_request)
}
void GSWrapperRequest::clear_connection_request() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (request_case() == kConnectionRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.request_.connection_request_;
    }
    clear_has_request();
  }
}
GSWrapperRequest::GSWrapperRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GSWrapperRequest)
}
inline PROTOBUF_NDEBUG_INLINE GSWrapperRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : request_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GSWrapperRequest::GSWrapperRequest(
    ::google::protobuf::Arena* arena,
    const GSWrapperRequest& from)
    : ::google::protobuf::Message(arena) {
  GSWrapperRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (request_case()) {
    case REQUEST_NOT_SET:
      break;
      case kConnectionRequest:
        _impl_.request_.connection_request_ = CreateMaybeMessage<::ConnectionRequestWrapper>(arena, *from._impl_.request_.connection_request_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:GSWrapperRequest)
}
inline PROTOBUF_NDEBUG_INLINE GSWrapperRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : request_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GSWrapperRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GSWrapperRequest::~GSWrapperRequest() {
  // @@protoc_insertion_point(destructor:GSWrapperRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GSWrapperRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_request()) {
    clear_request();
  }
  _impl_.~Impl_();
}

void GSWrapperRequest::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:GSWrapperRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (request_case()) {
    case kConnectionRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.request_.connection_request_;
      }
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REQUEST_NOT_SET;
}


PROTOBUF_NOINLINE void GSWrapperRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GSWrapperRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GSWrapperRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GSWrapperRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GSWrapperRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .ConnectionRequestWrapper connection_request = 1;
    {PROTOBUF_FIELD_OFFSET(GSWrapperRequest, _impl_.request_.connection_request_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ConnectionRequestWrapper>()},
  }}, {{
  }},
};

::uint8_t* GSWrapperRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GSWrapperRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ConnectionRequestWrapper connection_request = 1;
  if (request_case() == kConnectionRequest) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::connection_request(this),
        _Internal::connection_request(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GSWrapperRequest)
  return target;
}

::size_t GSWrapperRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GSWrapperRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (request_case()) {
    // .ConnectionRequestWrapper connection_request = 1;
    case kConnectionRequest: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.request_.connection_request_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GSWrapperRequest::_class_data_ = {
    GSWrapperRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GSWrapperRequest::GetClassData() const {
  return &_class_data_;
}

void GSWrapperRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GSWrapperRequest*>(&to_msg);
  auto& from = static_cast<const GSWrapperRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GSWrapperRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_case()) {
    case kConnectionRequest: {
      _this->_internal_mutable_connection_request()->::ConnectionRequestWrapper::MergeFrom(
          from._internal_connection_request());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GSWrapperRequest::CopyFrom(const GSWrapperRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GSWrapperRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GSWrapperRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GSWrapperRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GSWrapperRequest::InternalSwap(GSWrapperRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.request_, other->_impl_.request_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GSWrapperRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GSProtocol_2eproto_getter, &descriptor_table_GSProtocol_2eproto_once,
      file_level_metadata_GSProtocol_2eproto[0]);
}
// ===================================================================

class GSWrapperResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::GSWrapperResponse, _impl_._oneof_case_);
  static const ::ConnectionResponseWrapper& connection_response(const GSWrapperResponse* msg);
};

const ::ConnectionResponseWrapper& GSWrapperResponse::_Internal::connection_response(const GSWrapperResponse* msg) {
  return *msg->_impl_.response_.connection_response_;
}
void GSWrapperResponse::set_allocated_connection_response(::ConnectionResponseWrapper* connection_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response();
  if (connection_response) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(connection_response)->GetArena();
    if (message_arena != submessage_arena) {
      connection_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, connection_response, submessage_arena);
    }
    set_has_connection_response();
    _impl_.response_.connection_response_ = connection_response;
  }
  // @@protoc_insertion_point(field_set_allocated:GSWrapperResponse.connection_response)
}
void GSWrapperResponse::clear_connection_response() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (response_case() == kConnectionResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.response_.connection_response_;
    }
    clear_has_response();
  }
}
GSWrapperResponse::GSWrapperResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GSWrapperResponse)
}
inline PROTOBUF_NDEBUG_INLINE GSWrapperResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : response_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GSWrapperResponse::GSWrapperResponse(
    ::google::protobuf::Arena* arena,
    const GSWrapperResponse& from)
    : ::google::protobuf::Message(arena) {
  GSWrapperResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (response_case()) {
    case RESPONSE_NOT_SET:
      break;
      case kConnectionResponse:
        _impl_.response_.connection_response_ = CreateMaybeMessage<::ConnectionResponseWrapper>(arena, *from._impl_.response_.connection_response_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:GSWrapperResponse)
}
inline PROTOBUF_NDEBUG_INLINE GSWrapperResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : response_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GSWrapperResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GSWrapperResponse::~GSWrapperResponse() {
  // @@protoc_insertion_point(destructor:GSWrapperResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GSWrapperResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_response()) {
    clear_response();
  }
  _impl_.~Impl_();
}

void GSWrapperResponse::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:GSWrapperResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (response_case()) {
    case kConnectionResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.response_.connection_response_;
      }
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESPONSE_NOT_SET;
}


PROTOBUF_NOINLINE void GSWrapperResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GSWrapperResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GSWrapperResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GSWrapperResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GSWrapperResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .ConnectionResponseWrapper connection_response = 1;
    {PROTOBUF_FIELD_OFFSET(GSWrapperResponse, _impl_.response_.connection_response_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ConnectionResponseWrapper>()},
  }}, {{
  }},
};

::uint8_t* GSWrapperResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GSWrapperResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ConnectionResponseWrapper connection_response = 1;
  if (response_case() == kConnectionResponse) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::connection_response(this),
        _Internal::connection_response(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GSWrapperResponse)
  return target;
}

::size_t GSWrapperResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GSWrapperResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (response_case()) {
    // .ConnectionResponseWrapper connection_response = 1;
    case kConnectionResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.response_.connection_response_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GSWrapperResponse::_class_data_ = {
    GSWrapperResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GSWrapperResponse::GetClassData() const {
  return &_class_data_;
}

void GSWrapperResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GSWrapperResponse*>(&to_msg);
  auto& from = static_cast<const GSWrapperResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GSWrapperResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_case()) {
    case kConnectionResponse: {
      _this->_internal_mutable_connection_response()->::ConnectionResponseWrapper::MergeFrom(
          from._internal_connection_response());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GSWrapperResponse::CopyFrom(const GSWrapperResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GSWrapperResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GSWrapperResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GSWrapperResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GSWrapperResponse::InternalSwap(GSWrapperResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.response_, other->_impl_.response_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GSWrapperResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GSProtocol_2eproto_getter, &descriptor_table_GSProtocol_2eproto_once,
      file_level_metadata_GSProtocol_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

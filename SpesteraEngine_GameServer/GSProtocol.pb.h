// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GSProtocol.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_GSProtocol_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_GSProtocol_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "Connection.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_GSProtocol_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_GSProtocol_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_GSProtocol_2eproto;
class GSWrapperRequest;
struct GSWrapperRequestDefaultTypeInternal;
extern GSWrapperRequestDefaultTypeInternal _GSWrapperRequest_default_instance_;
class GSWrapperResponse;
struct GSWrapperResponseDefaultTypeInternal;
extern GSWrapperResponseDefaultTypeInternal _GSWrapperResponse_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class GSWrapperRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GSWrapperRequest) */ {
 public:
  inline GSWrapperRequest() : GSWrapperRequest(nullptr) {}
  ~GSWrapperRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GSWrapperRequest(::google::protobuf::internal::ConstantInitialized);

  inline GSWrapperRequest(const GSWrapperRequest& from)
      : GSWrapperRequest(nullptr, from) {}
  GSWrapperRequest(GSWrapperRequest&& from) noexcept
    : GSWrapperRequest() {
    *this = ::std::move(from);
  }

  inline GSWrapperRequest& operator=(const GSWrapperRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GSWrapperRequest& operator=(GSWrapperRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GSWrapperRequest& default_instance() {
    return *internal_default_instance();
  }
  enum RequestCase {
    kConnectionRequest = 1,
    REQUEST_NOT_SET = 0,
  };

  static inline const GSWrapperRequest* internal_default_instance() {
    return reinterpret_cast<const GSWrapperRequest*>(
               &_GSWrapperRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GSWrapperRequest& a, GSWrapperRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GSWrapperRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GSWrapperRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GSWrapperRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GSWrapperRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GSWrapperRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GSWrapperRequest& from) {
    GSWrapperRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GSWrapperRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GSWrapperRequest";
  }
  protected:
  explicit GSWrapperRequest(::google::protobuf::Arena* arena);
  GSWrapperRequest(::google::protobuf::Arena* arena, const GSWrapperRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionRequestFieldNumber = 1,
  };
  // .ConnectionRequestWrapper connection_request = 1;
  bool has_connection_request() const;
  private:
  bool _internal_has_connection_request() const;

  public:
  void clear_connection_request() ;
  const ::ConnectionRequestWrapper& connection_request() const;
  PROTOBUF_NODISCARD ::ConnectionRequestWrapper* release_connection_request();
  ::ConnectionRequestWrapper* mutable_connection_request();
  void set_allocated_connection_request(::ConnectionRequestWrapper* value);
  void unsafe_arena_set_allocated_connection_request(::ConnectionRequestWrapper* value);
  ::ConnectionRequestWrapper* unsafe_arena_release_connection_request();

  private:
  const ::ConnectionRequestWrapper& _internal_connection_request() const;
  ::ConnectionRequestWrapper* _internal_mutable_connection_request();

  public:
  void clear_request();
  RequestCase request_case() const;
  // @@protoc_insertion_point(class_scope:GSWrapperRequest)
 private:
  class _Internal;
  void set_has_connection_request();

  inline bool has_request() const;
  inline void clear_has_request();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    union RequestUnion {
      constexpr RequestUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ConnectionRequestWrapper* connection_request_;
    } request_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GSProtocol_2eproto;
};// -------------------------------------------------------------------

class GSWrapperResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GSWrapperResponse) */ {
 public:
  inline GSWrapperResponse() : GSWrapperResponse(nullptr) {}
  ~GSWrapperResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GSWrapperResponse(::google::protobuf::internal::ConstantInitialized);

  inline GSWrapperResponse(const GSWrapperResponse& from)
      : GSWrapperResponse(nullptr, from) {}
  GSWrapperResponse(GSWrapperResponse&& from) noexcept
    : GSWrapperResponse() {
    *this = ::std::move(from);
  }

  inline GSWrapperResponse& operator=(const GSWrapperResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GSWrapperResponse& operator=(GSWrapperResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GSWrapperResponse& default_instance() {
    return *internal_default_instance();
  }
  enum ResponseCase {
    kConnectionResponse = 1,
    RESPONSE_NOT_SET = 0,
  };

  static inline const GSWrapperResponse* internal_default_instance() {
    return reinterpret_cast<const GSWrapperResponse*>(
               &_GSWrapperResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GSWrapperResponse& a, GSWrapperResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GSWrapperResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GSWrapperResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GSWrapperResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GSWrapperResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GSWrapperResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GSWrapperResponse& from) {
    GSWrapperResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GSWrapperResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GSWrapperResponse";
  }
  protected:
  explicit GSWrapperResponse(::google::protobuf::Arena* arena);
  GSWrapperResponse(::google::protobuf::Arena* arena, const GSWrapperResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionResponseFieldNumber = 1,
  };
  // .ConnectionResponseWrapper connection_response = 1;
  bool has_connection_response() const;
  private:
  bool _internal_has_connection_response() const;

  public:
  void clear_connection_response() ;
  const ::ConnectionResponseWrapper& connection_response() const;
  PROTOBUF_NODISCARD ::ConnectionResponseWrapper* release_connection_response();
  ::ConnectionResponseWrapper* mutable_connection_response();
  void set_allocated_connection_response(::ConnectionResponseWrapper* value);
  void unsafe_arena_set_allocated_connection_response(::ConnectionResponseWrapper* value);
  ::ConnectionResponseWrapper* unsafe_arena_release_connection_response();

  private:
  const ::ConnectionResponseWrapper& _internal_connection_response() const;
  ::ConnectionResponseWrapper* _internal_mutable_connection_response();

  public:
  void clear_response();
  ResponseCase response_case() const;
  // @@protoc_insertion_point(class_scope:GSWrapperResponse)
 private:
  class _Internal;
  void set_has_connection_response();

  inline bool has_response() const;
  inline void clear_has_response();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    union ResponseUnion {
      constexpr ResponseUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ConnectionResponseWrapper* connection_response_;
    } response_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GSProtocol_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GSWrapperRequest

// .ConnectionRequestWrapper connection_request = 1;
inline bool GSWrapperRequest::has_connection_request() const {
  return request_case() == kConnectionRequest;
}
inline bool GSWrapperRequest::_internal_has_connection_request() const {
  return request_case() == kConnectionRequest;
}
inline void GSWrapperRequest::set_has_connection_request() {
  _impl_._oneof_case_[0] = kConnectionRequest;
}
inline ::ConnectionRequestWrapper* GSWrapperRequest::release_connection_request() {
  // @@protoc_insertion_point(field_release:GSWrapperRequest.connection_request)
  if (request_case() == kConnectionRequest) {
    clear_has_request();
    auto* temp = _impl_.request_.connection_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_.connection_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ConnectionRequestWrapper& GSWrapperRequest::_internal_connection_request() const {
  return request_case() == kConnectionRequest ? *_impl_.request_.connection_request_ : reinterpret_cast<::ConnectionRequestWrapper&>(::_ConnectionRequestWrapper_default_instance_);
}
inline const ::ConnectionRequestWrapper& GSWrapperRequest::connection_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GSWrapperRequest.connection_request)
  return _internal_connection_request();
}
inline ::ConnectionRequestWrapper* GSWrapperRequest::unsafe_arena_release_connection_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:GSWrapperRequest.connection_request)
  if (request_case() == kConnectionRequest) {
    clear_has_request();
    auto* temp = _impl_.request_.connection_request_;
    _impl_.request_.connection_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GSWrapperRequest::unsafe_arena_set_allocated_connection_request(::ConnectionRequestWrapper* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request();
  if (value) {
    set_has_connection_request();
    _impl_.request_.connection_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:GSWrapperRequest.connection_request)
}
inline ::ConnectionRequestWrapper* GSWrapperRequest::_internal_mutable_connection_request() {
  if (request_case() != kConnectionRequest) {
    clear_request();
    set_has_connection_request();
    _impl_.request_.connection_request_ = CreateMaybeMessage<::ConnectionRequestWrapper>(GetArena());
  }
  return _impl_.request_.connection_request_;
}
inline ::ConnectionRequestWrapper* GSWrapperRequest::mutable_connection_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ConnectionRequestWrapper* _msg = _internal_mutable_connection_request();
  // @@protoc_insertion_point(field_mutable:GSWrapperRequest.connection_request)
  return _msg;
}

inline bool GSWrapperRequest::has_request() const {
  return request_case() != REQUEST_NOT_SET;
}
inline void GSWrapperRequest::clear_has_request() {
  _impl_._oneof_case_[0] = REQUEST_NOT_SET;
}
inline GSWrapperRequest::RequestCase GSWrapperRequest::request_case() const {
  return GSWrapperRequest::RequestCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// GSWrapperResponse

// .ConnectionResponseWrapper connection_response = 1;
inline bool GSWrapperResponse::has_connection_response() const {
  return response_case() == kConnectionResponse;
}
inline bool GSWrapperResponse::_internal_has_connection_response() const {
  return response_case() == kConnectionResponse;
}
inline void GSWrapperResponse::set_has_connection_response() {
  _impl_._oneof_case_[0] = kConnectionResponse;
}
inline ::ConnectionResponseWrapper* GSWrapperResponse::release_connection_response() {
  // @@protoc_insertion_point(field_release:GSWrapperResponse.connection_response)
  if (response_case() == kConnectionResponse) {
    clear_has_response();
    auto* temp = _impl_.response_.connection_response_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_.connection_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ConnectionResponseWrapper& GSWrapperResponse::_internal_connection_response() const {
  return response_case() == kConnectionResponse ? *_impl_.response_.connection_response_ : reinterpret_cast<::ConnectionResponseWrapper&>(::_ConnectionResponseWrapper_default_instance_);
}
inline const ::ConnectionResponseWrapper& GSWrapperResponse::connection_response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GSWrapperResponse.connection_response)
  return _internal_connection_response();
}
inline ::ConnectionResponseWrapper* GSWrapperResponse::unsafe_arena_release_connection_response() {
  // @@protoc_insertion_point(field_unsafe_arena_release:GSWrapperResponse.connection_response)
  if (response_case() == kConnectionResponse) {
    clear_has_response();
    auto* temp = _impl_.response_.connection_response_;
    _impl_.response_.connection_response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GSWrapperResponse::unsafe_arena_set_allocated_connection_response(::ConnectionResponseWrapper* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response();
  if (value) {
    set_has_connection_response();
    _impl_.response_.connection_response_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:GSWrapperResponse.connection_response)
}
inline ::ConnectionResponseWrapper* GSWrapperResponse::_internal_mutable_connection_response() {
  if (response_case() != kConnectionResponse) {
    clear_response();
    set_has_connection_response();
    _impl_.response_.connection_response_ = CreateMaybeMessage<::ConnectionResponseWrapper>(GetArena());
  }
  return _impl_.response_.connection_response_;
}
inline ::ConnectionResponseWrapper* GSWrapperResponse::mutable_connection_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ConnectionResponseWrapper* _msg = _internal_mutable_connection_response();
  // @@protoc_insertion_point(field_mutable:GSWrapperResponse.connection_response)
  return _msg;
}

inline bool GSWrapperResponse::has_response() const {
  return response_case() != RESPONSE_NOT_SET;
}
inline void GSWrapperResponse::clear_has_response() {
  _impl_._oneof_case_[0] = RESPONSE_NOT_SET;
}
inline GSWrapperResponse::ResponseCase GSWrapperResponse::response_case() const {
  return GSWrapperResponse::ResponseCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_GSProtocol_2eproto_2epb_2eh

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameCharacterService.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_GameCharacterService_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_GameCharacterService_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_GameCharacterService_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_GameCharacterService_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_GameCharacterService_2eproto;
class GameCharacterServiceRequestWrapper;
struct GameCharacterServiceRequestWrapperDefaultTypeInternal;
extern GameCharacterServiceRequestWrapperDefaultTypeInternal _GameCharacterServiceRequestWrapper_default_instance_;
class GameCharacterServiceResponseWrapper;
struct GameCharacterServiceResponseWrapperDefaultTypeInternal;
extern GameCharacterServiceResponseWrapperDefaultTypeInternal _GameCharacterServiceResponseWrapper_default_instance_;
class RequestPlayerInitialData;
struct RequestPlayerInitialDataDefaultTypeInternal;
extern RequestPlayerInitialDataDefaultTypeInternal _RequestPlayerInitialData_default_instance_;
class ResponsePlayerInitialData;
struct ResponsePlayerInitialDataDefaultTypeInternal;
extern ResponsePlayerInitialDataDefaultTypeInternal _ResponsePlayerInitialData_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum GameCharacterServiceRequestWrapper_RequestType : int {
  GameCharacterServiceRequestWrapper_RequestType_REQUESTPLAYERINITIALDATA = 0,
  GameCharacterServiceRequestWrapper_RequestType_GameCharacterServiceRequestWrapper_RequestType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  GameCharacterServiceRequestWrapper_RequestType_GameCharacterServiceRequestWrapper_RequestType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool GameCharacterServiceRequestWrapper_RequestType_IsValid(int value);
extern const uint32_t GameCharacterServiceRequestWrapper_RequestType_internal_data_[];
constexpr GameCharacterServiceRequestWrapper_RequestType GameCharacterServiceRequestWrapper_RequestType_RequestType_MIN = static_cast<GameCharacterServiceRequestWrapper_RequestType>(0);
constexpr GameCharacterServiceRequestWrapper_RequestType GameCharacterServiceRequestWrapper_RequestType_RequestType_MAX = static_cast<GameCharacterServiceRequestWrapper_RequestType>(0);
constexpr int GameCharacterServiceRequestWrapper_RequestType_RequestType_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
GameCharacterServiceRequestWrapper_RequestType_descriptor();
template <typename T>
const std::string& GameCharacterServiceRequestWrapper_RequestType_Name(T value) {
  static_assert(std::is_same<T, GameCharacterServiceRequestWrapper_RequestType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RequestType_Name().");
  return GameCharacterServiceRequestWrapper_RequestType_Name(static_cast<GameCharacterServiceRequestWrapper_RequestType>(value));
}
template <>
inline const std::string& GameCharacterServiceRequestWrapper_RequestType_Name(GameCharacterServiceRequestWrapper_RequestType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GameCharacterServiceRequestWrapper_RequestType_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool GameCharacterServiceRequestWrapper_RequestType_Parse(absl::string_view name, GameCharacterServiceRequestWrapper_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GameCharacterServiceRequestWrapper_RequestType>(
      GameCharacterServiceRequestWrapper_RequestType_descriptor(), name, value);
}
enum GameCharacterServiceResponseWrapper_ResponseType : int {
  GameCharacterServiceResponseWrapper_ResponseType_RESPONSEPLAYERINITIALDATA = 0,
  GameCharacterServiceResponseWrapper_ResponseType_GameCharacterServiceResponseWrapper_ResponseType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  GameCharacterServiceResponseWrapper_ResponseType_GameCharacterServiceResponseWrapper_ResponseType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool GameCharacterServiceResponseWrapper_ResponseType_IsValid(int value);
extern const uint32_t GameCharacterServiceResponseWrapper_ResponseType_internal_data_[];
constexpr GameCharacterServiceResponseWrapper_ResponseType GameCharacterServiceResponseWrapper_ResponseType_ResponseType_MIN = static_cast<GameCharacterServiceResponseWrapper_ResponseType>(0);
constexpr GameCharacterServiceResponseWrapper_ResponseType GameCharacterServiceResponseWrapper_ResponseType_ResponseType_MAX = static_cast<GameCharacterServiceResponseWrapper_ResponseType>(0);
constexpr int GameCharacterServiceResponseWrapper_ResponseType_ResponseType_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
GameCharacterServiceResponseWrapper_ResponseType_descriptor();
template <typename T>
const std::string& GameCharacterServiceResponseWrapper_ResponseType_Name(T value) {
  static_assert(std::is_same<T, GameCharacterServiceResponseWrapper_ResponseType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ResponseType_Name().");
  return GameCharacterServiceResponseWrapper_ResponseType_Name(static_cast<GameCharacterServiceResponseWrapper_ResponseType>(value));
}
template <>
inline const std::string& GameCharacterServiceResponseWrapper_ResponseType_Name(GameCharacterServiceResponseWrapper_ResponseType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GameCharacterServiceResponseWrapper_ResponseType_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool GameCharacterServiceResponseWrapper_ResponseType_Parse(absl::string_view name, GameCharacterServiceResponseWrapper_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GameCharacterServiceResponseWrapper_ResponseType>(
      GameCharacterServiceResponseWrapper_ResponseType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ResponsePlayerInitialData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResponsePlayerInitialData) */ {
 public:
  inline ResponsePlayerInitialData() : ResponsePlayerInitialData(nullptr) {}
  ~ResponsePlayerInitialData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResponsePlayerInitialData(::google::protobuf::internal::ConstantInitialized);

  inline ResponsePlayerInitialData(const ResponsePlayerInitialData& from)
      : ResponsePlayerInitialData(nullptr, from) {}
  ResponsePlayerInitialData(ResponsePlayerInitialData&& from) noexcept
    : ResponsePlayerInitialData() {
    *this = ::std::move(from);
  }

  inline ResponsePlayerInitialData& operator=(const ResponsePlayerInitialData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResponsePlayerInitialData& operator=(ResponsePlayerInitialData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResponsePlayerInitialData& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResponsePlayerInitialData* internal_default_instance() {
    return reinterpret_cast<const ResponsePlayerInitialData*>(
               &_ResponsePlayerInitialData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ResponsePlayerInitialData& a, ResponsePlayerInitialData& b) {
    a.Swap(&b);
  }
  inline void Swap(ResponsePlayerInitialData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResponsePlayerInitialData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResponsePlayerInitialData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResponsePlayerInitialData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResponsePlayerInitialData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResponsePlayerInitialData& from) {
    ResponsePlayerInitialData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResponsePlayerInitialData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ResponsePlayerInitialData";
  }
  protected:
  explicit ResponsePlayerInitialData(::google::protobuf::Arena* arena);
  ResponsePlayerInitialData(::google::protobuf::Arena* arena, const ResponsePlayerInitialData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerNameFieldNumber = 1,
    kPositionXFieldNumber = 2,
    kPositionYFieldNumber = 3,
    kPositionZFieldNumber = 4,
    kRotationYFieldNumber = 5,
    kPlayerMovementspeedFieldNumber = 6,
  };
  // string player_name = 1;
  void clear_player_name() ;
  const std::string& player_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_player_name(Arg_&& arg, Args_... args);
  std::string* mutable_player_name();
  PROTOBUF_NODISCARD std::string* release_player_name();
  void set_allocated_player_name(std::string* value);

  private:
  const std::string& _internal_player_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_player_name(
      const std::string& value);
  std::string* _internal_mutable_player_name();

  public:
  // float position_x = 2;
  void clear_position_x() ;
  float position_x() const;
  void set_position_x(float value);

  private:
  float _internal_position_x() const;
  void _internal_set_position_x(float value);

  public:
  // float position_y = 3;
  void clear_position_y() ;
  float position_y() const;
  void set_position_y(float value);

  private:
  float _internal_position_y() const;
  void _internal_set_position_y(float value);

  public:
  // float position_z = 4;
  void clear_position_z() ;
  float position_z() const;
  void set_position_z(float value);

  private:
  float _internal_position_z() const;
  void _internal_set_position_z(float value);

  public:
  // uint32 rotation_y = 5;
  void clear_rotation_y() ;
  ::uint32_t rotation_y() const;
  void set_rotation_y(::uint32_t value);

  private:
  ::uint32_t _internal_rotation_y() const;
  void _internal_set_rotation_y(::uint32_t value);

  public:
  // uint32 player_movementspeed = 6;
  void clear_player_movementspeed() ;
  ::uint32_t player_movementspeed() const;
  void set_player_movementspeed(::uint32_t value);

  private:
  ::uint32_t _internal_player_movementspeed() const;
  void _internal_set_player_movementspeed(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ResponsePlayerInitialData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr player_name_;
    float position_x_;
    float position_y_;
    float position_z_;
    ::uint32_t rotation_y_;
    ::uint32_t player_movementspeed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GameCharacterService_2eproto;
};// -------------------------------------------------------------------

class RequestPlayerInitialData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RequestPlayerInitialData) */ {
 public:
  inline RequestPlayerInitialData() : RequestPlayerInitialData(nullptr) {}
  ~RequestPlayerInitialData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RequestPlayerInitialData(::google::protobuf::internal::ConstantInitialized);

  inline RequestPlayerInitialData(const RequestPlayerInitialData& from)
      : RequestPlayerInitialData(nullptr, from) {}
  RequestPlayerInitialData(RequestPlayerInitialData&& from) noexcept
    : RequestPlayerInitialData() {
    *this = ::std::move(from);
  }

  inline RequestPlayerInitialData& operator=(const RequestPlayerInitialData& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestPlayerInitialData& operator=(RequestPlayerInitialData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestPlayerInitialData& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestPlayerInitialData* internal_default_instance() {
    return reinterpret_cast<const RequestPlayerInitialData*>(
               &_RequestPlayerInitialData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RequestPlayerInitialData& a, RequestPlayerInitialData& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestPlayerInitialData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestPlayerInitialData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestPlayerInitialData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RequestPlayerInitialData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestPlayerInitialData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RequestPlayerInitialData& from) {
    RequestPlayerInitialData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestPlayerInitialData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "RequestPlayerInitialData";
  }
  protected:
  explicit RequestPlayerInitialData(::google::protobuf::Arena* arena);
  RequestPlayerInitialData(::google::protobuf::Arena* arena, const RequestPlayerInitialData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerGuidFieldNumber = 1,
  };
  // string player_guid = 1;
  void clear_player_guid() ;
  const std::string& player_guid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_player_guid(Arg_&& arg, Args_... args);
  std::string* mutable_player_guid();
  PROTOBUF_NODISCARD std::string* release_player_guid();
  void set_allocated_player_guid(std::string* value);

  private:
  const std::string& _internal_player_guid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_player_guid(
      const std::string& value);
  std::string* _internal_mutable_player_guid();

  public:
  // @@protoc_insertion_point(class_scope:RequestPlayerInitialData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr player_guid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GameCharacterService_2eproto;
};// -------------------------------------------------------------------

class GameCharacterServiceResponseWrapper final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameCharacterServiceResponseWrapper) */ {
 public:
  inline GameCharacterServiceResponseWrapper() : GameCharacterServiceResponseWrapper(nullptr) {}
  ~GameCharacterServiceResponseWrapper() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GameCharacterServiceResponseWrapper(::google::protobuf::internal::ConstantInitialized);

  inline GameCharacterServiceResponseWrapper(const GameCharacterServiceResponseWrapper& from)
      : GameCharacterServiceResponseWrapper(nullptr, from) {}
  GameCharacterServiceResponseWrapper(GameCharacterServiceResponseWrapper&& from) noexcept
    : GameCharacterServiceResponseWrapper() {
    *this = ::std::move(from);
  }

  inline GameCharacterServiceResponseWrapper& operator=(const GameCharacterServiceResponseWrapper& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameCharacterServiceResponseWrapper& operator=(GameCharacterServiceResponseWrapper&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameCharacterServiceResponseWrapper& default_instance() {
    return *internal_default_instance();
  }
  enum ResponseCase {
    kResponsePlayerInitialData = 2,
    RESPONSE_NOT_SET = 0,
  };

  static inline const GameCharacterServiceResponseWrapper* internal_default_instance() {
    return reinterpret_cast<const GameCharacterServiceResponseWrapper*>(
               &_GameCharacterServiceResponseWrapper_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GameCharacterServiceResponseWrapper& a, GameCharacterServiceResponseWrapper& b) {
    a.Swap(&b);
  }
  inline void Swap(GameCharacterServiceResponseWrapper* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameCharacterServiceResponseWrapper* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameCharacterServiceResponseWrapper* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GameCharacterServiceResponseWrapper>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameCharacterServiceResponseWrapper& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GameCharacterServiceResponseWrapper& from) {
    GameCharacterServiceResponseWrapper::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameCharacterServiceResponseWrapper* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GameCharacterServiceResponseWrapper";
  }
  protected:
  explicit GameCharacterServiceResponseWrapper(::google::protobuf::Arena* arena);
  GameCharacterServiceResponseWrapper(::google::protobuf::Arena* arena, const GameCharacterServiceResponseWrapper& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using ResponseType = GameCharacterServiceResponseWrapper_ResponseType;
  static constexpr ResponseType RESPONSEPLAYERINITIALDATA = GameCharacterServiceResponseWrapper_ResponseType_RESPONSEPLAYERINITIALDATA;
  static inline bool ResponseType_IsValid(int value) {
    return GameCharacterServiceResponseWrapper_ResponseType_IsValid(value);
  }
  static constexpr ResponseType ResponseType_MIN = GameCharacterServiceResponseWrapper_ResponseType_ResponseType_MIN;
  static constexpr ResponseType ResponseType_MAX = GameCharacterServiceResponseWrapper_ResponseType_ResponseType_MAX;
  static constexpr int ResponseType_ARRAYSIZE = GameCharacterServiceResponseWrapper_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ResponseType_descriptor() {
    return GameCharacterServiceResponseWrapper_ResponseType_descriptor();
  }
  template <typename T>
  static inline const std::string& ResponseType_Name(T value) {
    return GameCharacterServiceResponseWrapper_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(absl::string_view name, ResponseType* value) {
    return GameCharacterServiceResponseWrapper_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResponseTypeFieldNumber = 1,
    kResponsePlayerInitialDataFieldNumber = 2,
  };
  // .GameCharacterServiceResponseWrapper.ResponseType response_type = 1;
  void clear_response_type() ;
  ::GameCharacterServiceResponseWrapper_ResponseType response_type() const;
  void set_response_type(::GameCharacterServiceResponseWrapper_ResponseType value);

  private:
  ::GameCharacterServiceResponseWrapper_ResponseType _internal_response_type() const;
  void _internal_set_response_type(::GameCharacterServiceResponseWrapper_ResponseType value);

  public:
  // .ResponsePlayerInitialData response_player_initial_data = 2;
  bool has_response_player_initial_data() const;
  private:
  bool _internal_has_response_player_initial_data() const;

  public:
  void clear_response_player_initial_data() ;
  const ::ResponsePlayerInitialData& response_player_initial_data() const;
  PROTOBUF_NODISCARD ::ResponsePlayerInitialData* release_response_player_initial_data();
  ::ResponsePlayerInitialData* mutable_response_player_initial_data();
  void set_allocated_response_player_initial_data(::ResponsePlayerInitialData* value);
  void unsafe_arena_set_allocated_response_player_initial_data(::ResponsePlayerInitialData* value);
  ::ResponsePlayerInitialData* unsafe_arena_release_response_player_initial_data();

  private:
  const ::ResponsePlayerInitialData& _internal_response_player_initial_data() const;
  ::ResponsePlayerInitialData* _internal_mutable_response_player_initial_data();

  public:
  void clear_response();
  ResponseCase response_case() const;
  // @@protoc_insertion_point(class_scope:GameCharacterServiceResponseWrapper)
 private:
  class _Internal;
  void set_has_response_player_initial_data();

  inline bool has_response() const;
  inline void clear_has_response();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int response_type_;
    union ResponseUnion {
      constexpr ResponseUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ResponsePlayerInitialData* response_player_initial_data_;
    } response_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GameCharacterService_2eproto;
};// -------------------------------------------------------------------

class GameCharacterServiceRequestWrapper final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameCharacterServiceRequestWrapper) */ {
 public:
  inline GameCharacterServiceRequestWrapper() : GameCharacterServiceRequestWrapper(nullptr) {}
  ~GameCharacterServiceRequestWrapper() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GameCharacterServiceRequestWrapper(::google::protobuf::internal::ConstantInitialized);

  inline GameCharacterServiceRequestWrapper(const GameCharacterServiceRequestWrapper& from)
      : GameCharacterServiceRequestWrapper(nullptr, from) {}
  GameCharacterServiceRequestWrapper(GameCharacterServiceRequestWrapper&& from) noexcept
    : GameCharacterServiceRequestWrapper() {
    *this = ::std::move(from);
  }

  inline GameCharacterServiceRequestWrapper& operator=(const GameCharacterServiceRequestWrapper& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameCharacterServiceRequestWrapper& operator=(GameCharacterServiceRequestWrapper&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameCharacterServiceRequestWrapper& default_instance() {
    return *internal_default_instance();
  }
  enum RequestCase {
    kRequestPlayerInitialData = 2,
    REQUEST_NOT_SET = 0,
  };

  static inline const GameCharacterServiceRequestWrapper* internal_default_instance() {
    return reinterpret_cast<const GameCharacterServiceRequestWrapper*>(
               &_GameCharacterServiceRequestWrapper_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GameCharacterServiceRequestWrapper& a, GameCharacterServiceRequestWrapper& b) {
    a.Swap(&b);
  }
  inline void Swap(GameCharacterServiceRequestWrapper* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameCharacterServiceRequestWrapper* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameCharacterServiceRequestWrapper* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GameCharacterServiceRequestWrapper>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameCharacterServiceRequestWrapper& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GameCharacterServiceRequestWrapper& from) {
    GameCharacterServiceRequestWrapper::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameCharacterServiceRequestWrapper* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GameCharacterServiceRequestWrapper";
  }
  protected:
  explicit GameCharacterServiceRequestWrapper(::google::protobuf::Arena* arena);
  GameCharacterServiceRequestWrapper(::google::protobuf::Arena* arena, const GameCharacterServiceRequestWrapper& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using RequestType = GameCharacterServiceRequestWrapper_RequestType;
  static constexpr RequestType REQUESTPLAYERINITIALDATA = GameCharacterServiceRequestWrapper_RequestType_REQUESTPLAYERINITIALDATA;
  static inline bool RequestType_IsValid(int value) {
    return GameCharacterServiceRequestWrapper_RequestType_IsValid(value);
  }
  static constexpr RequestType RequestType_MIN = GameCharacterServiceRequestWrapper_RequestType_RequestType_MIN;
  static constexpr RequestType RequestType_MAX = GameCharacterServiceRequestWrapper_RequestType_RequestType_MAX;
  static constexpr int RequestType_ARRAYSIZE = GameCharacterServiceRequestWrapper_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* RequestType_descriptor() {
    return GameCharacterServiceRequestWrapper_RequestType_descriptor();
  }
  template <typename T>
  static inline const std::string& RequestType_Name(T value) {
    return GameCharacterServiceRequestWrapper_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(absl::string_view name, RequestType* value) {
    return GameCharacterServiceRequestWrapper_RequestType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kRequestTypeFieldNumber = 1,
    kRequestPlayerInitialDataFieldNumber = 2,
  };
  // .GameCharacterServiceRequestWrapper.RequestType request_type = 1;
  void clear_request_type() ;
  ::GameCharacterServiceRequestWrapper_RequestType request_type() const;
  void set_request_type(::GameCharacterServiceRequestWrapper_RequestType value);

  private:
  ::GameCharacterServiceRequestWrapper_RequestType _internal_request_type() const;
  void _internal_set_request_type(::GameCharacterServiceRequestWrapper_RequestType value);

  public:
  // .RequestPlayerInitialData request_player_initial_data = 2;
  bool has_request_player_initial_data() const;
  private:
  bool _internal_has_request_player_initial_data() const;

  public:
  void clear_request_player_initial_data() ;
  const ::RequestPlayerInitialData& request_player_initial_data() const;
  PROTOBUF_NODISCARD ::RequestPlayerInitialData* release_request_player_initial_data();
  ::RequestPlayerInitialData* mutable_request_player_initial_data();
  void set_allocated_request_player_initial_data(::RequestPlayerInitialData* value);
  void unsafe_arena_set_allocated_request_player_initial_data(::RequestPlayerInitialData* value);
  ::RequestPlayerInitialData* unsafe_arena_release_request_player_initial_data();

  private:
  const ::RequestPlayerInitialData& _internal_request_player_initial_data() const;
  ::RequestPlayerInitialData* _internal_mutable_request_player_initial_data();

  public:
  void clear_request();
  RequestCase request_case() const;
  // @@protoc_insertion_point(class_scope:GameCharacterServiceRequestWrapper)
 private:
  class _Internal;
  void set_has_request_player_initial_data();

  inline bool has_request() const;
  inline void clear_has_request();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int request_type_;
    union RequestUnion {
      constexpr RequestUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::RequestPlayerInitialData* request_player_initial_data_;
    } request_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_GameCharacterService_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GameCharacterServiceRequestWrapper

// .GameCharacterServiceRequestWrapper.RequestType request_type = 1;
inline void GameCharacterServiceRequestWrapper::clear_request_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.request_type_ = 0;
}
inline ::GameCharacterServiceRequestWrapper_RequestType GameCharacterServiceRequestWrapper::request_type() const {
  // @@protoc_insertion_point(field_get:GameCharacterServiceRequestWrapper.request_type)
  return _internal_request_type();
}
inline void GameCharacterServiceRequestWrapper::set_request_type(::GameCharacterServiceRequestWrapper_RequestType value) {
  _internal_set_request_type(value);
  // @@protoc_insertion_point(field_set:GameCharacterServiceRequestWrapper.request_type)
}
inline ::GameCharacterServiceRequestWrapper_RequestType GameCharacterServiceRequestWrapper::_internal_request_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::GameCharacterServiceRequestWrapper_RequestType>(_impl_.request_type_);
}
inline void GameCharacterServiceRequestWrapper::_internal_set_request_type(::GameCharacterServiceRequestWrapper_RequestType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.request_type_ = value;
}

// .RequestPlayerInitialData request_player_initial_data = 2;
inline bool GameCharacterServiceRequestWrapper::has_request_player_initial_data() const {
  return request_case() == kRequestPlayerInitialData;
}
inline bool GameCharacterServiceRequestWrapper::_internal_has_request_player_initial_data() const {
  return request_case() == kRequestPlayerInitialData;
}
inline void GameCharacterServiceRequestWrapper::set_has_request_player_initial_data() {
  _impl_._oneof_case_[0] = kRequestPlayerInitialData;
}
inline void GameCharacterServiceRequestWrapper::clear_request_player_initial_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (request_case() == kRequestPlayerInitialData) {
    if (GetArena() == nullptr) {
      delete _impl_.request_.request_player_initial_data_;
    }
    clear_has_request();
  }
}
inline ::RequestPlayerInitialData* GameCharacterServiceRequestWrapper::release_request_player_initial_data() {
  // @@protoc_insertion_point(field_release:GameCharacterServiceRequestWrapper.request_player_initial_data)
  if (request_case() == kRequestPlayerInitialData) {
    clear_has_request();
    auto* temp = _impl_.request_.request_player_initial_data_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.request_.request_player_initial_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::RequestPlayerInitialData& GameCharacterServiceRequestWrapper::_internal_request_player_initial_data() const {
  return request_case() == kRequestPlayerInitialData ? *_impl_.request_.request_player_initial_data_ : reinterpret_cast<::RequestPlayerInitialData&>(::_RequestPlayerInitialData_default_instance_);
}
inline const ::RequestPlayerInitialData& GameCharacterServiceRequestWrapper::request_player_initial_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GameCharacterServiceRequestWrapper.request_player_initial_data)
  return _internal_request_player_initial_data();
}
inline ::RequestPlayerInitialData* GameCharacterServiceRequestWrapper::unsafe_arena_release_request_player_initial_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:GameCharacterServiceRequestWrapper.request_player_initial_data)
  if (request_case() == kRequestPlayerInitialData) {
    clear_has_request();
    auto* temp = _impl_.request_.request_player_initial_data_;
    _impl_.request_.request_player_initial_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GameCharacterServiceRequestWrapper::unsafe_arena_set_allocated_request_player_initial_data(::RequestPlayerInitialData* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_request();
  if (value) {
    set_has_request_player_initial_data();
    _impl_.request_.request_player_initial_data_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:GameCharacterServiceRequestWrapper.request_player_initial_data)
}
inline ::RequestPlayerInitialData* GameCharacterServiceRequestWrapper::_internal_mutable_request_player_initial_data() {
  if (request_case() != kRequestPlayerInitialData) {
    clear_request();
    set_has_request_player_initial_data();
    _impl_.request_.request_player_initial_data_ = CreateMaybeMessage<::RequestPlayerInitialData>(GetArena());
  }
  return _impl_.request_.request_player_initial_data_;
}
inline ::RequestPlayerInitialData* GameCharacterServiceRequestWrapper::mutable_request_player_initial_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::RequestPlayerInitialData* _msg = _internal_mutable_request_player_initial_data();
  // @@protoc_insertion_point(field_mutable:GameCharacterServiceRequestWrapper.request_player_initial_data)
  return _msg;
}

inline bool GameCharacterServiceRequestWrapper::has_request() const {
  return request_case() != REQUEST_NOT_SET;
}
inline void GameCharacterServiceRequestWrapper::clear_has_request() {
  _impl_._oneof_case_[0] = REQUEST_NOT_SET;
}
inline GameCharacterServiceRequestWrapper::RequestCase GameCharacterServiceRequestWrapper::request_case() const {
  return GameCharacterServiceRequestWrapper::RequestCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// GameCharacterServiceResponseWrapper

// .GameCharacterServiceResponseWrapper.ResponseType response_type = 1;
inline void GameCharacterServiceResponseWrapper::clear_response_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.response_type_ = 0;
}
inline ::GameCharacterServiceResponseWrapper_ResponseType GameCharacterServiceResponseWrapper::response_type() const {
  // @@protoc_insertion_point(field_get:GameCharacterServiceResponseWrapper.response_type)
  return _internal_response_type();
}
inline void GameCharacterServiceResponseWrapper::set_response_type(::GameCharacterServiceResponseWrapper_ResponseType value) {
  _internal_set_response_type(value);
  // @@protoc_insertion_point(field_set:GameCharacterServiceResponseWrapper.response_type)
}
inline ::GameCharacterServiceResponseWrapper_ResponseType GameCharacterServiceResponseWrapper::_internal_response_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::GameCharacterServiceResponseWrapper_ResponseType>(_impl_.response_type_);
}
inline void GameCharacterServiceResponseWrapper::_internal_set_response_type(::GameCharacterServiceResponseWrapper_ResponseType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.response_type_ = value;
}

// .ResponsePlayerInitialData response_player_initial_data = 2;
inline bool GameCharacterServiceResponseWrapper::has_response_player_initial_data() const {
  return response_case() == kResponsePlayerInitialData;
}
inline bool GameCharacterServiceResponseWrapper::_internal_has_response_player_initial_data() const {
  return response_case() == kResponsePlayerInitialData;
}
inline void GameCharacterServiceResponseWrapper::set_has_response_player_initial_data() {
  _impl_._oneof_case_[0] = kResponsePlayerInitialData;
}
inline void GameCharacterServiceResponseWrapper::clear_response_player_initial_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (response_case() == kResponsePlayerInitialData) {
    if (GetArena() == nullptr) {
      delete _impl_.response_.response_player_initial_data_;
    }
    clear_has_response();
  }
}
inline ::ResponsePlayerInitialData* GameCharacterServiceResponseWrapper::release_response_player_initial_data() {
  // @@protoc_insertion_point(field_release:GameCharacterServiceResponseWrapper.response_player_initial_data)
  if (response_case() == kResponsePlayerInitialData) {
    clear_has_response();
    auto* temp = _impl_.response_.response_player_initial_data_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.response_.response_player_initial_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ResponsePlayerInitialData& GameCharacterServiceResponseWrapper::_internal_response_player_initial_data() const {
  return response_case() == kResponsePlayerInitialData ? *_impl_.response_.response_player_initial_data_ : reinterpret_cast<::ResponsePlayerInitialData&>(::_ResponsePlayerInitialData_default_instance_);
}
inline const ::ResponsePlayerInitialData& GameCharacterServiceResponseWrapper::response_player_initial_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GameCharacterServiceResponseWrapper.response_player_initial_data)
  return _internal_response_player_initial_data();
}
inline ::ResponsePlayerInitialData* GameCharacterServiceResponseWrapper::unsafe_arena_release_response_player_initial_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:GameCharacterServiceResponseWrapper.response_player_initial_data)
  if (response_case() == kResponsePlayerInitialData) {
    clear_has_response();
    auto* temp = _impl_.response_.response_player_initial_data_;
    _impl_.response_.response_player_initial_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GameCharacterServiceResponseWrapper::unsafe_arena_set_allocated_response_player_initial_data(::ResponsePlayerInitialData* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_response();
  if (value) {
    set_has_response_player_initial_data();
    _impl_.response_.response_player_initial_data_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:GameCharacterServiceResponseWrapper.response_player_initial_data)
}
inline ::ResponsePlayerInitialData* GameCharacterServiceResponseWrapper::_internal_mutable_response_player_initial_data() {
  if (response_case() != kResponsePlayerInitialData) {
    clear_response();
    set_has_response_player_initial_data();
    _impl_.response_.response_player_initial_data_ = CreateMaybeMessage<::ResponsePlayerInitialData>(GetArena());
  }
  return _impl_.response_.response_player_initial_data_;
}
inline ::ResponsePlayerInitialData* GameCharacterServiceResponseWrapper::mutable_response_player_initial_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ResponsePlayerInitialData* _msg = _internal_mutable_response_player_initial_data();
  // @@protoc_insertion_point(field_mutable:GameCharacterServiceResponseWrapper.response_player_initial_data)
  return _msg;
}

inline bool GameCharacterServiceResponseWrapper::has_response() const {
  return response_case() != RESPONSE_NOT_SET;
}
inline void GameCharacterServiceResponseWrapper::clear_has_response() {
  _impl_._oneof_case_[0] = RESPONSE_NOT_SET;
}
inline GameCharacterServiceResponseWrapper::ResponseCase GameCharacterServiceResponseWrapper::response_case() const {
  return GameCharacterServiceResponseWrapper::ResponseCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RequestPlayerInitialData

// string player_guid = 1;
inline void RequestPlayerInitialData::clear_player_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_guid_.ClearToEmpty();
}
inline const std::string& RequestPlayerInitialData::player_guid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RequestPlayerInitialData.player_guid)
  return _internal_player_guid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RequestPlayerInitialData::set_player_guid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_guid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:RequestPlayerInitialData.player_guid)
}
inline std::string* RequestPlayerInitialData::mutable_player_guid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_player_guid();
  // @@protoc_insertion_point(field_mutable:RequestPlayerInitialData.player_guid)
  return _s;
}
inline const std::string& RequestPlayerInitialData::_internal_player_guid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.player_guid_.Get();
}
inline void RequestPlayerInitialData::_internal_set_player_guid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_guid_.Set(value, GetArena());
}
inline std::string* RequestPlayerInitialData::_internal_mutable_player_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.player_guid_.Mutable( GetArena());
}
inline std::string* RequestPlayerInitialData::release_player_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:RequestPlayerInitialData.player_guid)
  return _impl_.player_guid_.Release();
}
inline void RequestPlayerInitialData::set_allocated_player_guid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_guid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.player_guid_.IsDefault()) {
          _impl_.player_guid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:RequestPlayerInitialData.player_guid)
}

// -------------------------------------------------------------------

// ResponsePlayerInitialData

// string player_name = 1;
inline void ResponsePlayerInitialData::clear_player_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_name_.ClearToEmpty();
}
inline const std::string& ResponsePlayerInitialData::player_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ResponsePlayerInitialData.player_name)
  return _internal_player_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResponsePlayerInitialData::set_player_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ResponsePlayerInitialData.player_name)
}
inline std::string* ResponsePlayerInitialData::mutable_player_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_player_name();
  // @@protoc_insertion_point(field_mutable:ResponsePlayerInitialData.player_name)
  return _s;
}
inline const std::string& ResponsePlayerInitialData::_internal_player_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.player_name_.Get();
}
inline void ResponsePlayerInitialData::_internal_set_player_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_name_.Set(value, GetArena());
}
inline std::string* ResponsePlayerInitialData::_internal_mutable_player_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.player_name_.Mutable( GetArena());
}
inline std::string* ResponsePlayerInitialData::release_player_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ResponsePlayerInitialData.player_name)
  return _impl_.player_name_.Release();
}
inline void ResponsePlayerInitialData::set_allocated_player_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.player_name_.IsDefault()) {
          _impl_.player_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ResponsePlayerInitialData.player_name)
}

// float position_x = 2;
inline void ResponsePlayerInitialData::clear_position_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_x_ = 0;
}
inline float ResponsePlayerInitialData::position_x() const {
  // @@protoc_insertion_point(field_get:ResponsePlayerInitialData.position_x)
  return _internal_position_x();
}
inline void ResponsePlayerInitialData::set_position_x(float value) {
  _internal_set_position_x(value);
  // @@protoc_insertion_point(field_set:ResponsePlayerInitialData.position_x)
}
inline float ResponsePlayerInitialData::_internal_position_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_x_;
}
inline void ResponsePlayerInitialData::_internal_set_position_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_x_ = value;
}

// float position_y = 3;
inline void ResponsePlayerInitialData::clear_position_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_y_ = 0;
}
inline float ResponsePlayerInitialData::position_y() const {
  // @@protoc_insertion_point(field_get:ResponsePlayerInitialData.position_y)
  return _internal_position_y();
}
inline void ResponsePlayerInitialData::set_position_y(float value) {
  _internal_set_position_y(value);
  // @@protoc_insertion_point(field_set:ResponsePlayerInitialData.position_y)
}
inline float ResponsePlayerInitialData::_internal_position_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_y_;
}
inline void ResponsePlayerInitialData::_internal_set_position_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_y_ = value;
}

// float position_z = 4;
inline void ResponsePlayerInitialData::clear_position_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.position_z_ = 0;
}
inline float ResponsePlayerInitialData::position_z() const {
  // @@protoc_insertion_point(field_get:ResponsePlayerInitialData.position_z)
  return _internal_position_z();
}
inline void ResponsePlayerInitialData::set_position_z(float value) {
  _internal_set_position_z(value);
  // @@protoc_insertion_point(field_set:ResponsePlayerInitialData.position_z)
}
inline float ResponsePlayerInitialData::_internal_position_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_z_;
}
inline void ResponsePlayerInitialData::_internal_set_position_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_z_ = value;
}

// uint32 rotation_y = 5;
inline void ResponsePlayerInitialData::clear_rotation_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rotation_y_ = 0u;
}
inline ::uint32_t ResponsePlayerInitialData::rotation_y() const {
  // @@protoc_insertion_point(field_get:ResponsePlayerInitialData.rotation_y)
  return _internal_rotation_y();
}
inline void ResponsePlayerInitialData::set_rotation_y(::uint32_t value) {
  _internal_set_rotation_y(value);
  // @@protoc_insertion_point(field_set:ResponsePlayerInitialData.rotation_y)
}
inline ::uint32_t ResponsePlayerInitialData::_internal_rotation_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rotation_y_;
}
inline void ResponsePlayerInitialData::_internal_set_rotation_y(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rotation_y_ = value;
}

// uint32 player_movementspeed = 6;
inline void ResponsePlayerInitialData::clear_player_movementspeed() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.player_movementspeed_ = 0u;
}
inline ::uint32_t ResponsePlayerInitialData::player_movementspeed() const {
  // @@protoc_insertion_point(field_get:ResponsePlayerInitialData.player_movementspeed)
  return _internal_player_movementspeed();
}
inline void ResponsePlayerInitialData::set_player_movementspeed(::uint32_t value) {
  _internal_set_player_movementspeed(value);
  // @@protoc_insertion_point(field_set:ResponsePlayerInitialData.player_movementspeed)
}
inline ::uint32_t ResponsePlayerInitialData::_internal_player_movementspeed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.player_movementspeed_;
}
inline void ResponsePlayerInitialData::_internal_set_player_movementspeed(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.player_movementspeed_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::GameCharacterServiceRequestWrapper_RequestType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::GameCharacterServiceRequestWrapper_RequestType>() {
  return ::GameCharacterServiceRequestWrapper_RequestType_descriptor();
}
template <>
struct is_proto_enum<::GameCharacterServiceResponseWrapper_ResponseType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::GameCharacterServiceResponseWrapper_ResponseType>() {
  return ::GameCharacterServiceResponseWrapper_ResponseType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_GameCharacterService_2eproto_2epb_2eh
